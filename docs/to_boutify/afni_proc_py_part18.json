{"helptext": ["ii", "                     -dsets_me_run r2.e*.nii", "", "                e.g. -dsets_me_run r1.e1.nii r1.e2.nii r1.e3.nii r1.e4.nii", "                     -dsets_me_run r2.e1.nii r2.e2.nii r2.e3.nii r2.e4.nii", "", "            This option is convenient when there are more echoes than runs.", "", "            When providing multi-echo data to afni_proc.py, doing all echoes", "            of all runs at once seems messy and error prone.  So one must", "            provide either one echo at a time (easier if there are more runs)", "            or one run at a time (easier if there are fewer runs).", "", "            With this option:", "", "               - use one option per run (as opposed to per echo, above)", "               - each option use should list all echo datasets for that run", "", "            For example, if there are 2 runs and 4 echoes, use 2 options, one", "            per run, and pass the 4 echoes of data for that run in each.", "", "            See also -dsets_me_echo.", "            See also -echo_times and -reg_echo.", "", "        -echo_times TE1 TE2 TE3 ... : specify echo-times for ME data processing", "", "                e.g. -echo_times 20 30.5 41.2", "", "            Use this option to specify echo times, if they are needed for the", "            'combine' processing block (OC/ME-ICA/tedana).", "", "            See also -combine_method.", "", "        -execute                : execute the created processing script", "", "            If this option is applied, not only will the processing script be", "            created, but it will then be executed in the \"suggested\" manner,", "            such as via:", "", "                tcsh -xef proc.sb23 |& tee output.proc.sb23", "", "            Note that it will actually use the bash format of the command,", "            since the system command (C and therefore python) uses /bin/sh.", "", "                tcsh -xef proc.sb23 2>&1 | tee output.proc.sb23", "", "        -gen_epi_review SCRIPT_NAME : specify script for EPI review", "", "                e.g. -gen_epi_review review_orig_EPI.txt", "", "            By default, the proc script calls gen_epi_review.py on the original", "            EPI data (from the tcat step, so only missing pre-SS TRs).  This", "            creates a \"drive afni\" script that the user can run to quickly scan", "            that EPI data for apparent issues.", "", "            Without this option, the script will be called @epi_review.$subj,", "            where $subj is the subject ID.", "", "            The script starts afni, loads the first EPI run and starts scanning", "            through time (effectively hitting 'v' in the graph window).  The", "            user can press <enter> in the prompting terminal window to go to", "            each successive run.", "", "            Note that the user has full control over afni, aside from a new run", "            being loaded whey they hit <enter>.  Recall that the <space> key", "            (applied in the graph window) can terminate the 'v' (video mode).", "", "            See 'gen_epi_review.py -help' for details.", "            See also 'no_epi_review', to disable this feature.", "", "        -no_epi_review", "", "            This option is used to prevent writing a gen_epi_review.py command", "            in the processing script (i.e. do not create a script to review the", "            EPI data).", "", "            The only clear reason to want this option is if gen_epi_review.py", "            fails for some reason.  It should not hurt to create that little", "            text file (@epi_review.$subj, by default).", "", "            See also '-gen_epi_review'.", "", "        -keep_rm_files          : do not have script delete rm.* files at end", "", "                e.g. -keep_rm_files", "", "            The output script may generate temporary files in a block, which", "            would be given names with prefix 'rm.'.  By default, those files", "            are deleted at the end of the script.  This option blocks that", "            deletion.", "", "        -move_preproc_files     : move preprocessing files to preproc.data dir", "", "            At the end of the output script, create a 'preproc.data' directory,", "            and move most of the files there (dfile, outcount, pb*, rm*).", "", "            See also -remove_preproc_files.", "", "        -no_proc_command        : do not print afni_proc.py command in script", "", "                e.g. -no_proc_command", "", "            If this option is applied, the command used to generate the output", "            script will be stored at the end of the script.", "", "        -out_dir DIR            : specify the output directory for the script", "", "                e.g. -out_dir ED_results", "                default: SUBJ.results", "", "            The AFNI processing script will create this directory and perform", "            all processing in it.", "", "        -outlier_count yes/no   : should we count outliers with 3dToutcount?", "", "                e.g. -outlier_count no", "                default: yes", "", "            By default, outlier fractions are computed per TR with 3dToutcount.", "            To disable outlier counting, apply this option with parameter 'no'.", "            This is a yes/no option, meaning those are the only valid inputs.", "", "            Note that -outlier_count must be 'yes' in order to censor outliers", "            with -regress_censor_outliers.", "", "            See \"3dToutcount -help\" for more details.", "            See also -regress_censor_outliers.", "", "        -outlier_legendre yes/no : use Legendre polynomials in 3dToutcount?", "", "                e.g. -outlier_legendre no", "                default: yes", "", "            By default the -legendre option is passed to 3dToutcount.  Along", "            with using better behaved polynomials, it also allows them to be", "            higher than 3rd order (if desired).", "", "            See \"3dToutcount -help\" for more details.", "", "        -outlier_polort POLORT  : specify polynomial baseline for 3dToutcount", "", "                e.g. -outlier_polort 3", "                default: same degree that 3dDeconvolve would use:", "                         1 + floor(run_length/150)", "", "            Outlier counts come after detrending the data, where the degree", "            of the polynomial trend defaults to the same that 3dDeconvolve", "            would use.  This option will override the default.", "", "            See \"3dToutcount -help\" for more details.", "            See \"3dDeconvolve -help\" for more details.", "            See also '-regress_polort' and '-outlier_legendre'.", "", "        -radial_correlate yes/no : correlate each voxel with local radius", "", "                e.g. -radial_correlate yes", "                default: no", "", "            With this option set, @radial_correlate will be run on the", "            initial EPI time series datasets.  That creates a 'corr_test'", "            directory that one can review, plus potential warnings (in text)", "            if large clusters of high correlations are found.", "", "            (very abbreviated) method for @radial_correlate:", "                for each voxel", "                   compute average time series within 20 mm radius sphere", "                   correlate central voxel time series with spherical average", "                look for clusters of high correlations", "", "            This is a useful quality control (QC) dataset that helps one find", "            scanner artifacts, particularly including coils going bad.", "", "            To visually check the results, the program text output suggests:", "", "                run command: afni corr_test.resu"], "params": [{"param_range": [1000, 1002], "help_range": [992, 1295]}, {"param_range": [1305, 1313], "help_range": [1331, 1827]}, {"param_range": [1837, 1852], "help_range": [1867, 2984]}, {"param_range": [2994, 3008], "help_range": [2986, 3443]}, {"param_range": [3453, 3467], "help_range": [3479, 3811]}, {"param_range": [3821, 3840], "help_range": [3847, 4091]}, {"param_range": [4101, 4117], "help_range": [4127, 4349]}, {"param_range": [4359, 4367], "help_range": [4385, 4621]}, {"param_range": [4631, 4645], "help_range": [4623, 5232]}, {"param_range": [5242, 5259], "help_range": [5234, 5639]}, {"param_range": [5649, 5664], "help_range": [5675, 6264]}], "previous": "afni_proc.py_part17.json", "next": "afni_proc.py_part19.json"}