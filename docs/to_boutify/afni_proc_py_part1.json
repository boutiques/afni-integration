{"helptext": ["", "    ===========================================================================", "    afni_proc.py        - generate a tcsh script for an AFNI process stream", "", "    Purpose: ~1~", "", "       This program is meant to create single subject processing scripts for", "       task, resting state or surface-based analyses.  The processing scripts", "       are written in the tcsh language.", "", "       The typical goal is to create volumes of aligned response magnitudes", "       (stimulus beta weights) to use as input for a group analysis.", "", "    Inputs (only EPI is required): ~1~", "", "       - anatomical dataset", "       - EPI time series datasets", "       - stimulus timing files", "       - processing and design decisions:", "           e.g. TRs to delete, blur size, censoring options, basis functions", "", "    Main outputs (many datasets are created): ~1~", "", "       - for task-based analysis: stats dataset (and anat_final)", "       - for resting-state analysis: errts datasets (\"cleaned up\" EPI)", "", "    Basic script outline: ~1~", "", "       - copy all inputs to new 'results' directory", "       - process data: e.g. despike,tshift/align/tlrc/volreg/blur/scale/regress", "       - leave all (well, most) results there, so user can review processing", "       - create @ss_review scripts to help user with basic quality control", "", "    The exact processing steps are controlled by the user, including which main", "    processing blocks to use, and their order.  See the 'DEFAULTS' section for", "    a description of the default options for each block.", "", "    The output script (when executed) would create a results directory, copy", "    input files into it, and perform all processing there.  So the user can", "    delete the results directory and modify/re-run the script at their whim.", "", "    Note that the user need not actually run the output script.  The user", "    should feel free to modify the script for their own evil purposes, or to", "    just compare the processing steps with those in their own scripts.  Also,", "    even if a user is writing their own processing scripts, it is a good idea", "    to get some independent confirmation of the processing, such as by using", "    afni_proc.py to compare the results on occasion.", "", "    The text interface can be accessed via the -ask_me option.  It invokes a", "    question & answer session, during which this program sets user options on", "    the fly.  The user may elect to enter some of the options on the command", "    line, even if using -ask_me.  See \"-ask_me EXAMPLES\", below.", "", "    ** However, -ask_me has not been touched in many years.  I suggest starting", "       with the 'modern' examples (for task/rest/surface), or by using the", "       uber_subject.py GUI (graphical user interface) to generate an initial", "       afni_proc.py command script.", "", "       See uber_subject.py -help (or just start the GUI) for details.", "", "    ==================================================", "    SECTIONS: order of sections in the \"afni_proc.py -help\" output ~1~", "", "        program introduction    : (above) basic overview of afni_proc.py", "        PROCESSING BLOCKS       : list of possible processing blocks", "        DEFAULTS                : basic default operations, per block", "        EXAMPLES                : various examples of running this program", "        NOTE sections           : details on various topics", "            GENERAL ANALYSIS NOTE, QUALITY CONTROL NOTE,", "            RESTING STATE NOTE, FREESURFER NOTE,", "            TIMING FILE NOTE, MASKING NOTE,", "            ANAT/EPI ALIGNMENT CASES NOTE, ANAT/EPI ALIGNMENT CORRECTIONS NOTE,", "            WARP TO TLRC NOTE,", "            RETROICOR NOTE, RUNS OF DIFFERENT LENGTHS NOTE,", "            SCRIPT EXECUTION NOTE", "        OPTIONS                 : desriptions of all program options", "            informational       : options to get quick info and quit", "            general execution   : options not specific to a processing block", "            block options       : specific to blocks, in default block order", "", "    ==================================================", "    PROCESSING BLOCKS (of the output script): ~1~", "", "    The output script will go through the following steps, unless the user", "    specifies otherwise.", "", "    automatic blocks (the tcsh script will always perform these): ~2~", "", "        setup       : check subject arg, set run list, create output dir, and", "                      copy stim files", "        tcat        : copy input datasets and remove unwanted initial TRs", "", "    default blocks (the user may skip these, or alter their order): ~2~", "", "        tshift      : slice timing alignment on volumes (default is -time 0)", "        volreg      : volume registration (default to third volume)", "        blur        : blur each volume (default is 4mm fwhm)", "        mask        : create a 'brain' mask from the EPI data (dilate 1 voxel)", "        scale       : scale each run mean to 100, for each voxel (max of 200)", "        regress     : regression analysis (default is GAM, peak 1, with motion", "                      params)", "", "    optional blocks (the default is to _not_ apply these blocks) ~2~", "", "        align       : align EPI anat anatomy (via align_epi_anat.py)", "        despike     : truncate spikes in each voxel's time series", "        empty       : placeholder for some user command (uses 3dTcat as sample)", "        ricor       : RETROICOR - removal of cardiac/respiratory regressors", "        tlrc        : warp anat to standard space", "", "    ==================================================", "    DEFAULTS: basic defaults for each block (blocks listed in default order) ~1~", "", "        A : denotes automatic block that is not a 'processing' option", "        D : denotes a default processing block (others must be requested)", "", "    A   setup:    - use 'SUBJ' for the subject id", "                        (option: -subj_id SUBJ)", "                  - create a t-shell script called 'proc_subj'", "                        (option: -script proc_subj)", "                  - use results directory 'SUBJ.results'", "                        (option: -out_dir SUBJ.results)", "", "    A   tcat:     - do not remove any of the first TRs", "", "        despike:  - NOTE: by default, this block is _not_ used", "                  - automasking is not done (requires -despike_mask)", "", "        ricor:    - NOTE: by default, this block is _not_ used", "                  - polort based on twice the actual run length", "                  - solver is OLSQ, not REML", "                  - do not remove any first TRs from the regressors", "", "    D   tshift:   - align slices to the beginning of the TR", "                  - use quintic interpolation for time series resampling", "                        (option: -tshift_interp -quintic)", "", "        align:    - align the anatomy to match the EPI", "                    (also required for the option of aligning EPI to anat)", "", "        tlrc:     - use TT_N27+tlrc as the base (-tlrc_base TT_N27+tlrc)", "                  - no additional suffix (-tlrc_suffix NONE)", "                  - use affine registration (no -tlrc_NL_warp)", "", "    D   volreg:   - align to third volume of first run, -zpad 1", "                        (option: -volreg_align_to third)", "                        (option: -volreg_zpad 1)", "                  - use cubic interpolation for volume resampling", "                        (option: -volreg_interp -cubic)", "                  - apply motion params as regressors across all runs at once", "                  - do not align EPI to anat", "                  - do not warp to standard space", "", "    D   blur:     - blur data using a 4 mm FWHM filter with 3dmerge", "                        (option: -blur_filter -1blur_fwhm)", "                        (option: -blur_size 4)", "                        (option: -blur_in_mask no)", "", "    D   mask:     - create a union of masks from 3dAutomask on each run", "                  - not applied in regression without -regress_apply_mask", "                  - if possible, create a subject anatomy mask", "                  - if possible, create a group anatomy mask (tlrc base)", "", "    D   scale:    - scale each voxel to mean of 100, clip values at 200", "", "    D   regress:  - use GAM regressor for each stim", "                        (option: -regress_basis)", "                  - compute the baseline polynomial degree, based on run length", "                        (e.g. option: -regress_polort 2)", "                  - do not censor large motion", "                  - output fit time series", "                  - output ideal curves for GAM/BLOCK regressors", "                  - output iresp curves for non-GAM/non-BLOCK regressors", "", "        empty:    - do nothing (just copy the data using 3dTcat)", "", "", "    ==================================================", "    EXAMPLES (options can be provided in any order): ~1~", "", "        Example 1. Minimum use. ~2~", "", "           Provide datasets and stim files (or stim_times files).  Note that a", "           dataset suffix (e.g. HEAD) must be used with wildcards, so that", "           datasets are not applied twice.  In this case, a stim_file with many", "           columns is given, where the script to changes it to stim_times files.", "", "                afni_proc.py -dsets epiRT*.HEAD              \\", "                             -regress_stim_files stims.1D", "", "           or without any wildcard, the .HEAD suffix is not needed:", "", "                afni_proc.py -dsets epiRT_r1+orig epiRT_r2+orig epiRT_r3+orig \\", "                             -regress_stim_files stims.1D", "", "     **************************************************************", "     *  New and improved!  Examples that apply to AFNI_data4.     *", "     *  (were quickly OLD and OBSOLETE, as we now use AFNI_data6) *", "     **************************************************************", "", "        The following examples can be run from the AFNI_data4 directory, and", "        are examples of how one might process the data for subject sb23.", "", "        Example 2. Very simple. ~2~", "", "        Use all defaults, except remove 3 TRs and use basis", "        function BLOCK(30,1).  The default basis function is GAM.", "", "                afni_proc.py -subj_id sb23.e2.simple                       \\", "                        -dsets sb23/epi_r??+orig.HEAD                      \\", "                    "], "params": [], "next": "afni_proc.py_part2.json"}