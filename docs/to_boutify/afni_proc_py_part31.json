{"helptext": ["uding the paper", "            reference for the method.", "            See also -mask_segment_anat, -mask_segment_erode, -regress_3dD_stop.", "            See also -regress_reml_exec.", "", "        -regress_anaticor_label LABEL : specify LABEL for ANATICOR ROI", "", "            To go with either -regress_anaticor or -regress_anaticor_fast,", "            this option is used the specifiy an alternate label of an ROI", "            mask to be used in the ANATICOR step.  The default LABEL is WMe", "            (eroded white matter from 3dSeg).", "", "            When this option is included, it is up to the user to make sure", "            afni_proc.py has such a label, either by including options:", "                -mask_segment_anat (and possibly -mask_segment_erode),", "                -regress_ROI_PC, -regress_ROI, or -anat_follower_ROI.", "", "            Any known label made via those options may be used.", "", "            See also -mask_segment_anat, -mask_segment_erode, -regress_ROI_PC,", "                -anat_follower_ROI.", "", "        -regress_anaticor_radius RADIUS : specify RADIUS for 3dLocalstat", "", "            To go with -regress_anaticor, use this option to specify the radius", "            of spheres within which local white matter is averaged.  A small", "            radius means the white matter is more local.  It is also faster.", "", "            If no white matter is found within the specified distance of some", "            voxel, the effect is that ANATICOR will simply not happen at that", "            voxel.  That is a reasonable \"failure\" case, in that it says there", "            is simply no white matter close enough to regress out (again, at", "            the given voxel).", "", "            See also -regress_anaticor.", "", "        -regress_anaticor_fast  : generate errts using fast ANATICOR method", "", "            This applies basically the same method as with -regress_anaticor,", "            above.  While -regress_anaticor creates WMeLocal dataset by", "            getting the average white matter voxel within a fixed radius, the", "            'fast' method computes it by instead integrating the white matter", "            over a gaussian curve.", "", "            There some basic effects of using the 'fast' method:", "", "                1. Using a Gaussian curve to compute each voxel-wise regressor", "                   gives more weight to the white matter that is closest to", "                   each given voxel.  The FWHM of this 3D kernel is specified", "                   by -regress_anaticor_fwhm, with a default of 30 mm.", "", "                2. If there is no close white matter (e.g. due to a poor", "                   segmentation), the Gaussian curve will likely find white", "                   matter far away, instead of creating an empty regressor.", "", "                3. This is quite a bit faster, because it is done by creating", "                   a time series of all desired white matter voxels, blurring", "                   it, and then just regressing out that dataset.  The blur", "                   operation is much faster than a localstat one.", "", "            Please see \"@ANATICOR -help\" for more detail, including the paper", "            reference for the method.", "            See also -regress_anaticor_fwhm/", "            See also -mask_segment_anat, -mask_segment_erode, -regress_3dD_stop.", "            See also -regress_anaticor.", "", "        -regress_anaticor_fwhm FWHM  : specify FWHM for 'fast' ANATICOR, in mm", "", "                e.g.     -regress_anaticor_fwhm 20", "                default: -regress_anaticor_fwhm 30", "", "            This option applies to -regress_anaticor_fast.", "", "            The 'fast' ANATICOR method blurs the time series of desired white", "            matter voxels using a Gaussian kernel with the given FWHM (full", "            width at half maximum).", "", "            To understand the FWHM, note that it is essentially the diameter of", "            a sphere where the contribution from points at that distance", "            (FWHM/2) contribute half as much as the center point.  For example,", "            if FWHM=10mm, then any voxel at a distance of 5 mm would contribute", "            half as much as a voxel at the center of the kernel.", "", "            See also -regress_anaticor_fast.", "", "        -regress_apply_mask     : apply the mask during scaling and regression", "", "            By default, any created union mask is not applied to the analysis.", "            Use this option to apply it.", "", "         ** This option is essentially obsolete.  Please consider -mask_apply", "            as a preferable option to choose which mask to apply.", "", "            See \"MASKING NOTE\" and \"DEFAULTS\" for details.", "            See also -blocks, -mask_apply.", "", "        -regress_apply_mot_types TYPE1 ... : specify motion regressors", "", "                e.g. -regress_apply_mot_types basic", "                e.g. -regress_apply_mot_types deriv", "                e.g. -regress_apply_mot_types demean deriv", "                default: demean", "", "            By default, the motion parameters from 3dvolreg are applied in the", "            regression, but after first removing the mean, per run.  This is", "            the application of the 'demean' regressors.", "", "            This option gives the ability to choose a combination of:", "", "                basic:  dfile_rall.1D - the parameters straight from 3dvolreg", "                        (or an external motion file, see -regress_motion_file)", "                demean: 'basic' params with the mean removed, per run", "                deriv:  per-run derivative of 'basic' params (de-meaned)", "", "         ** Note that basic and demean cannot both be used, as they would cause", "            multi-collinearity with the constant drift parameters.", "", "         ** Note also that basic and demean will give the same results, except", "            for the betas of the constant drift parameters (and subject to", "            computational precision).", "", "         ** A small side effect of de-meaning motion parameters is that the", "            constant drift terms should evaluate to the mean baseline.", "", "            See also -regress_motion_file, -regress_no_motion_demean,", "            -regress_no_motion_deriv, -regress_no_motion.", "", "        -regress_apply_ricor yes/no : apply ricor regs in final regression", "", "                e.g.     -regress_apply_ricor yes", "                default: no", "", "            This is from a change in the default behavior 30 Jan 2012.  Prior", "            to then, the 13 (?) ricor regressors from slice 0 would be applied", "            in the final regression (mostly accounting for degrees of freedom).", "            But since resting state analysis relies on a subsequent correlation", "            analysis, it seems cleaner not to regress them (a second time).", "", "        -regress_bandpass lowf highf : bandpass the frequency range", "", "                e.g.  -regress_bandpass 0.01 0.1", "", "            This option is intended for use in resting state analysis.", "", "            Use this option to perform bandpass filtering during the linear", "            regression.  While such an operation is slow (much slower than the", "            FFT using 3dBandpass), doing it during the regression allows one to", "            perform (e.g. motion) censoring at the same time.", "", "            This option has a similar effect to running 3dBandpass, e.g. the", "            example of '-regress_bandpass 0.01 0.1' is akin to running:", "", "                3dBandpass -ort motion.1D -band 0.01 0.1", "", "            except that it is done in 3dDeconvolve using linear regression.", "            And censoring is easy in the context of regression.", "", "            Note that the Nyquist frequency is 0.5/TR.  That means that if the", "            TR were >= 5 seconds, there would be no frequencies within the band", "           "], "params": [{"param_range": [1000, 1024], "help_range": [1034, 1683]}, {"param_range": [1693, 1715], "help_range": [1719, 3281]}, {"param_range": [3291, 3313], "help_range": [3322, 4140]}, {"param_range": [4150, 4169], "help_range": [4176, 4589]}, {"param_range": [4599, 4623], "help_range": [4591, 6060]}, {"param_range": [6070, 6090], "help_range": [6062, 6609]}], "previous": "afni_proc.py_part30.json", "next": "afni_proc.py_part32.json"}