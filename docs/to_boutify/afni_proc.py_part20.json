{"helptext": ["tal reps", "                local times     : # rows equal # runs", "                                : times must be >= 0.0", "                                : times per run (per row) are unique", "                                : times cannot exceed run time", "                global times    : file must be either 1 row or 1 column", "                                : times must be >= 0.0", "                                : times must be unique", "                                : times cannot exceed total duration of all runs", "", "            This option provides the ability to disable this test.", "", "            See \"1d_tool.py -help\" for details on '-look_like_*' options.", "            See also -regress_stim_files, -regress_extra_stim_files,", "            -regress_stim_times, -regress_local_times, -regress_global_times.", "", "        -verb LEVEL             : specify the verbosity of this script", "", "                e.g. -verb 2", "                default: 1", "", "            Print out extra information during execution.", "", "        -write_3dD_prefix PREFIX : specify prefix for outputs from 3dd_script", "", "                e.g. -write_3dD_prefix basis.tent.", "                default: test.", "", "            If a separate 3dDeconvolve command script is generated via the", "            option -write_3dD_script, then the given PREFIX will be used for", "            relevant output files. in the script.", "", "            See also -write_3dD_script.", "", "        -write_3dD_script SCRIPT : specify SCRIPT only for 3dDeconvolve command", "", "                e.g. -write_3dD_script run.3dd.tent", "", "            This option is intended to be used with the EXACT same afni_proc.py", "            command (aside from any -write_3dD_* options).  The purpose is to", "            generate a corresponding 3dDeconvolve command script which could", "            be run in the same results directory.", "", "            Alternatively, little things could be changed that would only", "            affect the 3dDeconvolve command in the new script, such as the", "            basis function(s).", "", "            The new script should include a prefix to distinguish output files", "            from those created by the original proc script.", "", "          * This option implies '-test_stim_files no'.", "", "            See also -write_3dD_prefix, -test_stim_files.", "", "        -write_ppi_3dD_scripts  : flag: write 3dD scripts for PPI analysis", "", "                e.g. -write_ppi_3dD_scripts                        \\", "                     -regress_ppi_stim_files PPI_*.1D some_seed.1D \\", "                     -regress_ppi_stim_labels PPI_A PPI_B PPI_C seed", "", "            Request 3dDeconvolve scripts for pre-PPI filtering (do regression", "            without censoring) and post-PPI filtering (include PPI regressors", "            and seed).", "", "            This is a convenience method for creating extra 3dDeconvolve", "            command scripts without having to run afni_proc.py multiple times", "            with different options.", "", "            Using this option, afni_proc.py will create the main proc script,", "            plus :", "", "               A. (if censoring was done) an uncensored 3dDeconvolve command", "                  pre-PPI filter script, to create an uncensored errts time", "                  series.", "", "                  This script is akin to using -write_3dD_* to output a", "                  regression script, along with adding -regress_skip_censor.", "                  The regression command should be identical to the original", "                  one, except for inclusion of 3dDeconvolve's -censor option.", "", "               B. a 3dDeconvolve post-PPI filter script to include the PPI", "                  and seed regressors.", "", "                  This script is akin to using -write_3dD_* to output a", "                  regression script, along with passing the PPI and seed", "                  regressors via -regress_extra_stim_files and _labels.", "", "            Use -regress_ppi_stim_files and -regress_ppi_stim_labels to", "            specify the PPI (and seed) regressors and their labels.  These", "            options are currently required.", "", "            See also -regress_ppi_stim_files, -regress_ppi_stim_labels.", "", "        -----------------------------------------------------------------", "        Block options (in default block order) ~3~", "", "        These options pertain to individual processing blocks.  Each option", "        starts with the block name.", "", "        -tcat_preSS_warn_limit LIMIT : TR #0 outlier limit to warn of pre-SS", "", "                e.g. -tcat_preSS_warn_limit 0.7", "                default: 0.4", "", "            Outlier fractions are computed across TRs in the tcat processing", "            block.  If TR #0 has a large fraction, it might suggest that pre-", "            steady state TRs have been included in the analysis.  If the", "            detected fraction exceeds this limit, a warning will be stored", "            (and output by the @ss_review_basic script).", "", "            The special case of limit = 0.0 implies no check will be done.", "", "        -tcat_remove_first_trs NUM : specify how many TRs to remove from runs", "", "                e.g. -tcat_remove_first_trs 3", "                e.g. -tcat_remove_first_trs 3 1 0 0 3", "                default: 0", "", "            Since it takes several seconds for the magnetization to reach a", "            steady state (at the beginning of each run), the initial TRs of", "            each run may have values that are significantly greater than the", "            later ones.  This option is used to specify how many TRs to", "            remove from the beginning of every run.", "", "            If the number needs to vary across runs, then one number should", "            be specified per run.", "", "        -tcat_remove_last_trs NUM : specify TRs to remove from run ends", "", "                e.g. -tcat_remove_last_trs 10", "                default: 0", "", "            For when the user wants a simple way to shorten each run.", "", "            See also -ricor_regs_rm_nlast.", "", "        -despike_mask           : allow Automasking in 3dDespike", "", "            By default, -nomask is applied to 3dDespike.  Since anatomical", "            masks will probably not be contained within the Automask operation", "            of 3dDespike (which uses methods akin to '3dAutomask -dilate 4'),", "            it is left up to the user to speed up this operation via masking.", "", "            Note that the only case in which this should be done is when", "            applying the EPI mask to the regression.", "", "            Please see '3dDespike -help' and '3dAutomask -help' for more", "            information.", "", "        -despike_new yes/no     : set whether to use new version of 3dDespike", "", "                e.g. -despike_new no", "                default: yes", "", "            There is a '-NEW' option/method in 3dDespike which runs a faster", "            method than the previous L1-norm method (Nov 2013).  The results", "            are similar but not identical (different fits).  The difference in", "            speed is more "], "params": [{"param_range": [1000, 1017], "help_range": [1027, 1396]}, {"param_range": [1406, 1423], "help_range": [1433, 2252]}, {"param_range": [2262, 2284], "help_range": [2288, 2398]}, {"param_range": [2420, 2443], "help_range": [2399, 2467]}, {"param_range": [2489, 2513], "help_range": [2468, 4324]}, {"param_range": [4334, 4356], "help_range": [4365, 4917]}, {"param_range": [4927, 4949], "help_range": [4956, 5589]}, {"param_range": [5599, 5620], "help_range": [5627, 5851]}], "previous": "afni_proc.py_part19.json", "next": "afni_proc.py_part21.json"}