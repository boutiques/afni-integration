{
 "helptext": [
  "",
  "Prints out sort-of-useful information from a 3D dataset's header",
  "Usage: 3dinfo [-verb OR -short] dataset [dataset ...] ~1~",
  "  -verb means to print out lots of stuff",
  "  -VERB means even more stuff [including slice time offsets]",
  "  -short means to print out less stuff [now the default]",
  "  -h: Mini help, at time, same as -help in many cases.",
  "  -help: The entire help output",
  "  -HELP: Extreme help, same as -help in majority of cases.",
  "  -h_view: Open help in text editor. AFNI will try to find a GUI editor",
  "  -hview : on your machine. You can control which it should use by",
  "           setting environment variable AFNI_GUI_EDITOR.",
  "  -h_web: Open help in web browser. AFNI will try to find a browser.",
  "  -hweb : on your machine. You can control which it should use by",
  "          setting environment variable AFNI_GUI_EDITOR. ",
  "  -h_find WORD: Look for lines in this programs's -help output that match",
  "                (approximately) WORD.",
  "  -h_raw: Help string unedited",
  "  -h_spx: Help string in sphinx loveliness, but do not try to autoformat",
  "  -h_aspx: Help string in sphinx with autoformatting of options, etc.",
  "  -all_opts: Try to identify all options for the program from the",
  "             output of its -help option. Some options might be missed",
  "             and others misidentified. Use this output for hints only.",
  "  ",
  "Alternative Usage (without either of the above options): ~1~",
  "  3dinfo -label2index label dataset",
  "  * Prints to stdout the index corresponding to the sub-brick with",
  "    the name label, or a blank line if label not found.",
  "  * If this option is used, then the ONLY output is this sub-brick index.",
  "    This is intended to be used in a script, as in this tcsh fragment:",
  "      set face = `3dinfo -label2index Face#0 AA_Decon+orig`",
  "      set hous = `3dinfo -label2index House#0 AA_Decon+orig`",
  "      3dcalc -a AA_Decon+orig\"[$face]\" -b AA_Decon+orig\"[$hous]\" ...",
  "  * Added per the request and efforts of Colm Connolly.",
  "",
  "Alternate Alternative Usage: ~1~",
  "  3dinfo <OPTION> [OPTION ..] dataset [dataset ...]",
  "  Outputs a specific piece of information depending on OPTION.",
  "",
  "  ==============================================================",
  "  Options producing one value (string) ~2~",
  "  ==============================================================",
  "   -exists: 1 if dset is loadable, 0 otherwise",
  "            This works on prefix also.",
  "   -id: Idcodestring of dset",
  "   -is_atlas: 1 if dset is an atlas.",
  "   -is_nifti: 1 if dset is NIFTI format, 0 otherwise",
  "   -space: dataset's space",
  "   -gen_space: datasets generic space",
  "   -av_space: AFNI format's view extension for the space",
  "   -is_oblique: 1 if dset is oblique",
  "   -handedness: L if orientation is Left handed, R if it is right handed",
  "   -obliquity: Angle from plumb direction.",
  "               Angles of 0 (or close) are for cardinal orientations",
  "   -prefix: Return the prefix",
  "   -prefix_noext: Return the prefix without extensions",
  "   -n[i|j|k]: Return the number of voxels in i, j, k dimensions",
  "   -nijk: Return ni*nj*nk",
  "   -nv: Return number of points in time or the number of sub-bricks",
  "   -nt: same as -nv",
  "   -n4: same as -ni -nj -nk -nv",
  "   -nvi: The maximum sub-brick index (= nv -1 )",
  "   -nti: same as -nvi",
  "   -ntimes: Return number of sub-bricks points in time",
  "        This is an option for debugging use, stay away from it.",
  "   -max_node: For a surface-based dset, return the maximum node index",
  "   -di: Signed displacement per voxel along i direction, aka dx",
  "   -dj: Signed displacement per voxel along j direction, aka dy",
  "   -dk: Signed displacement per voxel along k direction, aka dz",
  "   -d3: same as -di -dj -dk",
  "   -adi: Voxel size along i direction (abs(di))",
  "   -adj: Voxel size along j direction (abs(dj))",
  "   -adk: Voxel size along k direction (abs(dk))",
  "   -ad3: same as -adi -adj -adk",
  "   -voxvol: Voxel volume in cubic millimeters",
  "   -oi: Volume origin along the i direction",
  "   -oj: Volume origin along the j direction",
  "   -ok: Volume origin along the k direction",
  "   -o3: same as -oi -oj -ok",
  "   -tr: The TR value in seconds.",
  "   -dmin: The dataset's minimum value, scaled by fac",
  "   -dmax: The dataset's maximum value, scaled by fac",
  "   -dminus: The dataset's minimum value, unscaled.",
  "   -dmaxus: The dataset's maximum value, unscaled.",
  "   -smode: Dset storage mode string.",
  "   -header_name: Value of dset structure (sub)field 'header_name'",
  "   -brick_name: Value of dset structure (sub)field 'brick_name'",
  "   -iname: Name of dset as input on the command line",
  "   -orient: Value of orientation string.",
  "            For example, LPI means:",
  "               i direction grows from Left(negative) to Right(positive).",
  "               j direction grows from Posterior (neg.) to Anterior (pos.)",
  "               k direction grows from Inferior (neg.) to Superior (pos.)",
  "   -extent: The spatial extent of the dataset along R, L, A, P, I and S",
  "   -Rextent: Extent along R",
  "   -Lextent: Extent along L",
  "   -Aextent: Extent along P",
  "   -Pextent: Extent along P",
  "   -Iextent: Extent along I",
  "   -Sextent: Extent along S",
  "   -all_names: Value of various dset structures handling filenames.",
  "",
  "  ==============================================================",
  "  Options producing one value per sub-brick ~2~",
  "  ==============================================================",
  "   -fac: Return the float scaling factor",
  "   -label: The label of each sub-brick",
  "   -datum: The data storage type",
  "   -min: The minimum value, scaled by fac",
  "   -max: The maximum value, scaled by fac",
  "   -minus: The minimum value, unscaled.",
  "   -maxus: The maximum value, unscaled.",
  "",
  "  ==============================================================",
  "  Options producing multiple values (strings of multiple lines) ~2~",
  "  ==============================================================",
  "   You can specify the delimiter between sub-brick parameters with",
  "       -sb_delim DELIM. Default DELIM is \"|\"",
  "   -labeltable: Show label table, if any",
  "   -labeltable_as_atlas_points: Show label table in atlas point format.",
  "   -atlas_points: Show atlas points list, if any",
  "   -history: History note. ",
  "   -slice_timing: Show slice timing. ",
  "",
  "  ==============================================================",
  "  Options affecting output format ~2~",
  "  ==============================================================",
  "   -header_line: Output as the first line the names of attributes",
  "                 in each field (column)",
  "   -hdr: Same as -header_line",
  "   -sb_delim SB_DELIM: Delimiter string between sub-brick values",
  "                       Default SB_DELIM is \"|\"",
  "   -NA_flag NAFLAG: String to use when a field is not found or not",
  "                    applicable. Default is \"NA\"",
  "   -atr_delim ATR_DELIM: Delimiter string between attributes",
  "                         Default ATR_DELIM is the tab character.",
  "",
  "  ==============================================================",
  "  Options requiring dataset pairing at input ~2~",
  "  ==============================================================",
  "    3dinfo allows you to make some comparisons between dataset pairs.",
  "    The comparison is always done in both directions whether or not",
  "    the answer can be different. For example:",
  "          3dinfo -same_grid dset1 dset2 ",
  "    will output two values, one comparing dset1 to dset2 and the second",
  "    comparing dset2 to dset1. With -same_grid, the answers will always",
  "    be identical, but this might be different for other queries.",
  "    This behaviour allows you to mix options requiring dataset pairs",
  "    with those that do not. For example:",
  "          3dinfo -header_line -prefix -n4 -same_grid \\",
  "                              DSET1+orig DSET2.nii DSET3.nii DSET4.nii",
  "",
  "   -same_grid: Output 1 if the grid is identical between two dsets",
  "                      0 otherwise. ",
  "               For -same_grid to be 1, all of -same_dim, -same_delta,",
  "               -same_orient, -same_center, and -same_obl must return 1",
  "   -same_dim: 1 if dimensions are the same between dset pairs",
  "   -same_delta: 1 if voxels sizes are the same between dset pairs",
  "   -same_orient: 1 if orientation is the same between dset pairs",
  "   -same_center: 1 if geometric center is the same between dset pairs",
  "   -same_obl: 1 if obliquity is the same between dset pairs",
  "   -same_all_grid: Equivalent to listing all of -same_dim -same_delta",
  "                   -same_orient, -same_center, and -same_obl on the ",
  "                   command line.",
  "   -val_diff: Output the sum of absolute differences of all voxels in the",
  "              dataset pair.",
  "   -sval_diff: Same as -val_diff, but the sum is divided (scaled) by the ",
  "               total number of voxels that are not zero in at least one",
  "               of the two datasets.",
  "",
  "   -monog_pairs: Instead of pairing each dset with the first, pair each",
  "                couple separately. This requires you to have an even",
  "                number of dsets on the command line",
  "",
  " Examples with csh syntax using datasets in your afni binaries directory ~1~",
  "",
  "  0- First get some datasets with which we'll play",
  "     set dsets = ( `apsearch -list_all_afni_P_dsets` )",
  "",
  "  1- The classic",
  "     3dinfo $dsets[1]",
  "",
  "  2- Produce a table of results using 1-value-options for two datasets",
  "     3dinfo  -echo_edu -prefix_noext -prefix -space -ni -nj -nk -nt  \\",
  "               $dsets[1-2]",
  "",
  "  3- Use some of the options that operate on pairs, mix with other options",
  "     3dinfo -echo_edu -header_line -prefix -n4 -same_grid $dsets[1-4]",
  "",
  "",
  "",
  "++ Compile date = May 25 2018 {AFNI_18.1.18:macosx_10.7_Intel_64}",
  ""
 ],
 "params": [
  {
   "param_range": [
    126,
    131
   ],
   "help_range": [
    131,
    164
   ]
  },
  {
   "param_range": [
    167,
    172
   ],
   "help_range": [
    172,
    225
   ]
  },
  {
   "param_range": [
    228,
    234
   ],
   "help_range": [
    234,
    282
   ]
  },
  {
   "param_range": [
    285,
    287
   ],
   "help_range": [
    289,
    337
   ]
  },
  {
   "param_range": [
    340,
    345
   ],
   "help_range": [
    347,
    369
   ]
  },
  {
   "param_range": [
    372,
    377
   ],
   "help_range": [
    379,
    428
   ]
  },
  {
   "param_range": [
    431,
    438
   ],
   "help_range": [
    440,
    500
   ]
  },
  {
   "param_range": [
    503,
    509
   ],
   "help_range": [
    512,
    624
   ]
  },
  {
   "param_range": [
    627,
    633
   ],
   "help_range": [
    635,
    693
   ]
  },
  {
   "param_range": [
    696,
    701
   ],
   "help_range": [
    704,
    815
   ]
  },
  {
   "param_range": [
    819,
    826
   ],
   "help_range": [
    833,
    928
   ]
  },
  {
   "param_range": [
    931,
    937
   ],
   "help_range": [
    939,
    959
   ]
  },
  {
   "param_range": [
    962,
    968
   ],
   "help_range": [
    970,
    1032
   ]
  },
  {
   "param_range": [
    1035,
    1042
   ],
   "help_range": [
    1044,
    1102
   ]
  },
  {
   "param_range": [
    1105,
    1114
   ],
   "help_range": [
    1116,
    2246
   ]
  },
  {
   "param_range": [
    2250,
    2257
   ],
   "help_range": [
    2259,
    2332
   ]
  },
  {
   "param_range": [
    2336,
    2339
   ],
   "help_range": [
    2341,
    2361
   ]
  },
  {
   "param_range": [
    2365,
    2374
   ],
   "help_range": [
    2376,
    2398
   ]
  },
  {
   "param_range": [
    2402,
    2411
   ],
   "help_range": [
    2413,
    2451
   ]
  },
  {
   "param_range": [
    2455,
    2461
   ],
   "help_range": [
    2463,
    2478
   ]
  },
  {
   "param_range": [
    2482,
    2492
   ],
   "help_range": [
    2494,
    2516
   ]
  },
  {
   "param_range": [
    2520,
    2529
   ],
   "help_range": [
    2531,
    2573
   ]
  },
  {
   "param_range": [
    2577,
    2588
   ],
   "help_range": [
    2590,
    2610
   ]
  },
  {
   "param_range": [
    2614,
    2625
   ],
   "help_range": [
    2627,
    2683
   ]
  },
  {
   "param_range": [
    2687,
    2697
   ],
   "help_range": [
    2699,
    2794
   ]
  },
  {
   "param_range": [
    2798,
    2805
   ],
   "help_range": [
    2807,
    2824
   ]
  },
  {
   "param_range": [
    2828,
    2841
   ],
   "help_range": [
    2843,
    2943
   ]
  },
  {
   "param_range": [
    2947,
    2952
   ],
   "help_range": [
    2954,
    2969
   ]
  },
  {
   "param_range": [
    2973,
    2976
   ],
   "help_range": [
    2978,
    3037
   ]
  },
  {
   "param_range": [
    3041,
    3044
   ],
   "help_range": [
    3046,
    3057
   ]
  },
  {
   "param_range": [
    3061,
    3064
   ],
   "help_range": [
    3066,
    3089
   ]
  },
  {
   "param_range": [
    3093,
    3097
   ],
   "help_range": [
    3099,
    3137
   ]
  },
  {
   "param_range": [
    3141,
    3145
   ],
   "help_range": [
    3147,
    3159
   ]
  },
  {
   "param_range": [
    3163,
    3170
   ],
   "help_range": [
    3172,
    3278
   ]
  },
  {
   "param_range": [
    3282,
    3291
   ],
   "help_range": [
    3293,
    3348
   ]
  },
  {
   "param_range": [
    3352,
    3355
   ],
   "help_range": [
    3357,
    3412
   ]
  },
  {
   "param_range": [
    3416,
    3419
   ],
   "help_range": [
    3421,
    3476
   ]
  },
  {
   "param_range": [
    3480,
    3483
   ],
   "help_range": [
    3485,
    3540
   ]
  },
  {
   "param_range": [
    3544,
    3547
   ],
   "help_range": [
    3549,
    3568
   ]
  },
  {
   "param_range": [
    3572,
    3576
   ],
   "help_range": [
    3578,
    3616
   ]
  },
  {
   "param_range": [
    3620,
    3624
   ],
   "help_range": [
    3626,
    3664
   ]
  },
  {
   "param_range": [
    3668,
    3672
   ],
   "help_range": [
    3674,
    3712
   ]
  },
  {
   "param_range": [
    3716,
    3720
   ],
   "help_range": [
    3722,
    3744
   ]
  },
  {
   "param_range": [
    3748,
    3755
   ],
   "help_range": [
    3757,
    3790
   ]
  },
  {
   "param_range": [
    3794,
    3797
   ],
   "help_range": [
    3799,
    3834
   ]
  },
  {
   "param_range": [
    3838,
    3841
   ],
   "help_range": [
    3843,
    3878
   ]
  },
  {
   "param_range": [
    3882,
    3885
   ],
   "help_range": [
    3887,
    3922
   ]
  },
  {
   "param_range": [
    3926,
    3929
   ],
   "help_range": [
    3931,
    3950
   ]
  },
  {
   "param_range": [
    3954,
    3957
   ],
   "help_range": [
    3959,
    3983
   ]
  },
  {
   "param_range": [
    3987,
    3992
   ],
   "help_range": [
    3994,
    4036
   ]
  },
  {
   "param_range": [
    4040,
    4045
   ],
   "help_range": [
    4047,
    4089
   ]
  },
  {
   "param_range": [
    4093,
    4100
   ],
   "help_range": [
    4102,
    4140
   ]
  },
  {
   "param_range": [
    4144,
    4151
   ],
   "help_range": [
    4153,
    4191
   ]
  },
  {
   "param_range": [
    4195,
    4201
   ],
   "help_range": [
    4203,
    4228
   ]
  },
  {
   "param_range": [
    4232,
    4244
   ],
   "help_range": [
    4246,
    4294
   ]
  },
  {
   "param_range": [
    4298,
    4309
   ],
   "help_range": [
    4311,
    4358
   ]
  },
  {
   "param_range": [
    4362,
    4368
   ],
   "help_range": [
    4370,
    4411
   ]
  },
  {
   "param_range": [
    4415,
    4422
   ],
   "help_range": [
    4424,
    4708
   ]
  },
  {
   "param_range": [
    4712,
    4719
   ],
   "help_range": [
    4721,
    4780
   ]
  },
  {
   "param_range": [
    4784,
    4792
   ],
   "help_range": [
    4794,
    4808
   ]
  },
  {
   "param_range": [
    4812,
    4820
   ],
   "help_range": [
    4822,
    4836
   ]
  },
  {
   "param_range": [
    4840,
    4848
   ],
   "help_range": [
    4850,
    4864
   ]
  },
  {
   "param_range": [
    4868,
    4876
   ],
   "help_range": [
    4850,
    4864
   ]
  },
  {
   "param_range": [
    4896,
    4904
   ],
   "help_range": [
    4906,
    4920
   ]
  },
  {
   "param_range": [
    4924,
    4932
   ],
   "help_range": [
    4934,
    4948
   ]
  },
  {
   "param_range": [
    4952,
    4962
   ],
   "help_range": [
    4964,
    5195
   ]
  },
  {
   "param_range": [
    5199,
    5203
   ],
   "help_range": [
    5205,
    5236
   ]
  },
  {
   "param_range": [
    5240,
    5246
   ],
   "help_range": [
    5248,
    5275
   ]
  },
  {
   "param_range": [
    5279,
    5285
   ],
   "help_range": [
    5287,
    5308
   ]
  },
  {
   "param_range": [
    5312,
    5316
   ],
   "help_range": [
    5318,
    5350
   ]
  },
  {
   "param_range": [
    5354,
    5358
   ],
   "help_range": [
    5360,
    5392
   ]
  },
  {
   "param_range": [
    5396,
    5402
   ],
   "help_range": [
    5404,
    5432
   ]
  },
  {
   "param_range": [
    5436,
    5442
   ],
   "help_range": [
    5444,
    5783
   ]
  },
  {
   "param_range": [
    5787,
    5798
   ],
   "help_range": [
    5800,
    5824
   ]
  },
  {
   "param_range": [
    5828,
    5855
   ],
   "help_range": [
    5857,
    5896
   ]
  },
  {
   "param_range": [
    5900,
    5913
   ],
   "help_range": [
    5915,
    5945
   ]
  },
  {
   "param_range": [
    5949,
    5957
   ],
   "help_range": [
    5959,
    5972
   ]
  },
  {
   "param_range": [
    5977,
    5990
   ],
   "help_range": [
    5992,
    6180
   ]
  },
  {
   "param_range": [
    6184,
    6196
   ],
   "help_range": [
    6198,
    6286
   ]
  },
  {
   "param_range": [
    6290,
    6294
   ],
   "help_range": [
    6296,
    6316
   ]
  },
  {
   "param_range": [
    6320,
    6329
   ],
   "help_range": [
    6340,
    6428
   ]
  },
  {
   "param_range": [
    6432,
    6440
   ],
   "help_range": [
    6449,
    6543
   ]
  },
  {
   "param_range": [
    6547,
    6557
   ],
   "help_range": [
    6569,
    7518
   ]
  },
  {
   "param_range": [
    7523,
    7533
   ],
   "help_range": [
    7535,
    7763
   ]
  },
  {
   "param_range": [
    7767,
    7776
   ],
   "help_range": [
    7778,
    7825
   ]
  },
  {
   "param_range": [
    7829,
    7840
   ],
   "help_range": [
    7842,
    7891
   ]
  },
  {
   "param_range": [
    7895,
    7907
   ],
   "help_range": [
    7909,
    7956
   ]
  },
  {
   "param_range": [
    7960,
    7972
   ],
   "help_range": [
    7974,
    8026
   ]
  },
  {
   "param_range": [
    8030,
    8039
   ],
   "help_range": [
    8041,
    8086
   ]
  },
  {
   "param_range": [
    8090,
    8104
   ],
   "help_range": [
    8106,
    8258
   ]
  },
  {
   "param_range": [
    8262,
    8271
   ],
   "help_range": [
    8273,
    8360
   ]
  },
  {
   "param_range": [
    8364,
    8374
   ],
   "help_range": [
    8376,
    8542
   ]
  },
  {
   "param_range": [
    8547,
    8559
   ],
   "help_range": [
    8561,
    9346
   ]
  }
 ]
}