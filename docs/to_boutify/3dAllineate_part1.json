{"helptext": ["Usage: 3dAllineate [options] sourcedataset", "", "Program to align one dataset (the 'source') to a base dataset.", "Options are available to control:", " ++ How the matching between the source and the base is computed", "    (i.e., the 'cost functional' measuring image mismatch).", " ++ How the resliced source is interpolated to the base space.", " ++ The complexity of the spatial transformation ('warp') used.", " ++ And many many technical options to control the process in detail,", "    if you know what you are doing (or just like to fool around).", "", "=====----------------------------------------------------------------------", "NOTES: For most 3D image registration purposes, we now recommend that you", "=====  use Daniel Glen's script align_epi_anat.py (which, despite its name,", "       can do many more registration problems than EPI-to-T1-weighted).", "  -->> In particular, using 3dAllineate with the 'lpc' cost functional", "       (to align EPI and T1-weighted volumes) requires using a '-weight'", "       volume to get good results, and the align_epi_anat.py script will", "       automagically generate such a weight dataset that works well for", "       EPI-to-structural alignment.", "  -->> This script can also be used for other alignment purposes, such", "       as T1-weighted alignment between field strengths using the", "       '-lpa' cost functional.  Investigate align_epi_anat.py to", "       see if it will do what you need -- you might make your life", "       a little easier and nicer and happier and more tranquil.", "  -->> Also, if/when you ask for registration help on the AFNI", "       message board, we'll probably start by recommending that you", "       try align_epi_anat.py if you haven't already done so.", "  -->> For aligning EPI and T1-weighted volumes, we have found that", "       using a flip angle of 50-60 degrees for the EPI works better than", "       a flip angle of 90 degrees.  The reason is that there is more", "       internal contrast in the EPI data when the flip angle is smaller,", "       so the registration has some image structure to work with.  With", "       the 90 degree flip angle, there is so little internal contrast in", "       the EPI dataset that the alignment process ends up being just", "       trying to match brain outlines -- which doesn't always give accurate", "       results: see http://dx.doi.org/10.1016/j.neuroimage.2008.09.037", "  -->> Although the total MRI signal is reduced at a smaller flip angle,", "       there is little or no loss in FMRI/BOLD information, since the bulk", "       of the time series 'noise' is from physiological fluctuation signals,", "       which are also reduced by the lower flip angle -- for more details,", "       see http://dx.doi.org/10.1016/j.neuroimage.2010.11.020", "---------------------------------------------------------------------------", "  **** New (Summer 2013) program 3dQwarp is available to do nonlinear  ****", "  ***  alignment between a base and source dataset, including the use   ***", "  **   of 3dAllineate for the preliminary affine alignment.  If you are  **", "  *    interested, see the output of '3dQwarp -help' for the details.     *", "---------------------------------------------------------------------------", "", "COMMAND LINE OPTIONS:", "====================", " -base bbb   = Set the base dataset to be the #0 sub-brick of 'bbb'.", "               If no -base option is given, then the base volume is", "               taken to be the #0 sub-brick of the source dataset.", "               (Base must be stored as floats, shorts, or bytes.)", "", " -source ttt = Read the source dataset from 'ttt'.  If no -source", "   *OR*        (or -input) option is given, then the source dataset", " -input ttt    is the last argument on the command line.", "               (Source must be stored as floats, shorts, or bytes.)", "            ** 3dAllineate can register 2D datasets (single slice),", "               but both the base and source must be 2D -- you cannot", "               use this program to register a 2D slice into a 3D volume!", "            ** See the script @2dwarper.Allin for an example of using", "               3dAllineate to do slice-by-slice nonlinear warping to", "               align 3D volumes distorted by time-dependent magnetic", "               field inhomogeneities.", "", " ** NOTA BENE: The base and source dataset do NOT have to be defined **", " ** [that's]   on the same 3D grids; the alignment process uses the  **", " ** [Latin ]   coordinate systems defined in the dataset headers to  **", " ** [  for ]   make the match between spatial locations, rather than **", " ** [ NOTE ]   matching the 2 datasets on a voxel-by-voxel basis     **", " ** [ WELL ]   (as 3dvolreg and 3dWarpDrive do).           "], "params": [{"param_range": [3185, 3190], "help_range": [3199, 3453]}, {"param_range": [3456, 3463], "help_range": [3470, 3588]}], "next": "3dAllineate_part2.json"}