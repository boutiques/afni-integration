{
 "helptext": [
  "",
  "Script used to create a label table ",
  "",
  "Usage: @MakeLabelTable <-labeltable LABELTABLE> ",
  "                     [-atlas_pointlist ATLAS_POINTLIST>",
  "                     [<-lab_r LAB MIN MAX> <-lab_r LAB MIN MAX> <...>]",
  "                     [<-lab_v LAB KEY> <-lab_v LAB VAL> <...>]",
  "                     [<-lab_file FILE cLAB cVAL>]",
  "                     [<-dset DSET>]",
  "   -labeltable LABELTABLE: Name of output label table",
  "   -atlas_pointlist ATLAS_POINTLIST: Instead of a label table",
  "                                     produce an atlas point list",
  "   -lab_r LAB MIN MAX: Define a label LAB its minimum key MIN",
  "                       and its maximum value MAX. ",
  "              For example: -lab_r GM 5 7 generates in the labeltable:",
  "                           \"5\" \"GM01\"",
  "                           \"6\" \"GM02\"",
  "                           \"7\" \"GM03\"",
  "   -lab_v LAB KEY: Define a label LAB and its value KEY",
  "              For example: -lab_v  WM 8 generates in the labeltable:",
  "                           \"8\" \"WM\"",
  "   -lab_file FILE cLAB cVAL: Labels and keys are in text file FILE.",
  "                          cLAB is the index of column containing labels",
  "                          vVAL is the index of column containing keys",
  "                          (1st column is indexed at 0)",
  "   -lab_file_delim COL_DELIM: Set column delimiter for -lab_file option",
  "                              Default is ' ' (space), but you can set",
  "                              your own. ';' for example. Note that the ",
  "                              delimiter is passed directly to awk's -F",
  "                 Note: This option must be set BEFORE -lab_file option",
  "                       on the command line.",
  "   -dset DSET: Attach the label table (or atlas point list) to ",
  "               dataset DSET",
  "   -centers : Compute center of mass location for each ROI",
  "              requires simple blobbish ROIs to work",
  "   -skip_novoxels : Skip regions without voxels",
  "",
  "   Note that you cannot use the same key for multiple labels.",
  "   When redundancies occur, the script preserves just one entry.",
  "",
  "   Example:",
  "      @MakeLabelTable   -lab_r CSF 1 3 -lab_r GM 5 7 -lab_v WM 8  \\",
  "                        -labeltable example1",
  "",
  "Usage mode 2: Get information about an existing labeltable",
  "    @MakeLabelTable <-labeltable LABELTABLE> ",
  "        <[-lkeys LABEL] | [-rkeys LABEL] | [-all_labels] | [-all_keys]>",
  "",
  "    -all_labels: Return a listing of the labels",
  "    -all_keys:  Return a listing of all keys",
  "    -lkeys LABEL: Return the keys whose labels match LABEL",
  "    -rkeys LABEL: Return the range (min max) of keys whose ",
  "                  labels match LABEL",
  "    -klabel KEY: Return the label associated with KEY",
  "    -match_label LABEL: Return labels matching LABEL",
  "    -labeltable_of_dset DSET: Dump the labeltable from DSET",
  "    -word_label_match: Use word matching (grep's -w )",
  "                       With this option, 'Out' matches 'Out.l1'",
  "                       but no longer matches 'OutSk'",
  "    -quiet_death: Do not give error messages when failing",
  "   Options in usage 2 are mutually exclusive",
  "",
  "Usage mode 3: Transform Label Tables to Atlas Point Lists and exit",
  "    @MakeLabelTable [<-LT_to_atlas_PL LABELTABLE>] ",
  "                  [<-dset_LT_to_atlas_PL DSET POINTLIST]",
  "    -LT_to_atlas_PL LABELTABLE: Transform Label Table LABELTABLE to ",
  "                                Atlas Point List",
  "    -dset_LT_to_atlas_PL DSET POINTLIST: Get Label Table in",
  "                                DSET and write it out as an",
  "                                Atlas Point List to POINTLIST",
  "",
  "   Example:",
  "      @MakeLabelTable -LT_to_atlas_PL aparc.a2009s+aseg_rank.niml.lt",
  "",
  "Usage mode 4: Turn a labeled dataset or an integral valued dset ",
  "              into an ATLAS",
  "    @MakeLabelTable [<-atlasize_labeled_dset SOME_LABELED_ROI_DSET>] ",
  "                  [<-atlas_file ATLAS_NIML_FILE] ",
  "                  [<-atlas_name ATLAS_NAME>] [-replace]",
  "",
  "     -atlasize_labeled_dset SOME_LABELED_ROI_DSET: Change a labeled",
  "                            ROI dataset into an atlas",
  "     -atlas_file ATLAS_NIML_FILE: Specify the name of the NIML file",
  "                            where atlas attributes are stored.",
  "                            Default is ./SessionAtlases.niml which",
  "                            is a good choice for single subject atlases",
  "     -atlas_name ATLAS_NAME: Atlas is named based on the prefix, by ",
  "                             default. You can override that with this",
  "                             option.",
  "     -atlas_description ATLAS_DESC: Atlas description, which appears",
  "                             in afni's whereami window. Default is",
  "                             'My Atlas'",
  "     -replace: If ATLAS_NAME is already in ATLAS_NIML_FILE, the script",
  "               will fail to proceed unless you instruct it to do so ",
  "               this option",
  "     -add_atlas_dset ATLAS_DSET: Use if you have an atlas that you want",
  "                                 added to an atlas_file.",
  "",
  "   Example:",
  "      @MakeLabelTable -atlasize_labeled_dset SOME_LABELED_ROI_DSET",
  " or you can specify the keys in a file:",
  "      @MakeLabelTable -lab_file FILE cLAB cVAL \\",
  "                      -atlas_pointlist apl \\",
  "                      -dset target_dset \\",
  "                      -atlas_file SessionAtlases.niml",
  "",
  "            -------------------------",
  "            See also @Atlasize script",
  "            -------------------------",
  "",
  "Global Help Options:",
  "--------------------",
  "",
  "   -h_web: Open webpage with help for this program",
  "   -hweb: Same as -h_web",
  "   -h_view: Open -help output in a GUI editor",
  "   -hview: Same as -hview",
  "   -all_opts: List all of the options for this script",
  "   -h_find WORD: Search for lines containing WORD in -help",
  "                 output. Seach is approximate.",
  ""
 ],
 "params": [
  {
   "param_range": [
    367,
    378
   ],
   "help_range": [
    391,
    417
   ]
  },
  {
   "param_range": [
    421,
    437
   ],
   "help_range": [
    455,
    544
   ]
  },
  {
   "param_range": [
    548,
    554
   ],
   "help_range": [
    568,
    841
   ]
  },
  {
   "param_range": [
    845,
    851
   ],
   "help_range": [
    861,
    1002
   ]
  },
  {
   "param_range": [
    1006,
    1015
   ],
   "help_range": [
    1032,
    1267
   ]
  },
  {
   "param_range": [
    1271,
    1286
   ],
   "help_range": [
    1298,
    1667
   ]
  },
  {
   "param_range": [
    1671,
    1676
   ],
   "help_range": [
    1683,
    1759
   ]
  },
  {
   "param_range": [
    1763,
    1771
   ],
   "help_range": [
    1774,
    1870
   ]
  },
  {
   "param_range": [
    1874,
    1888
   ],
   "help_range": [
    1891,
    2350
   ]
  },
  {
   "param_range": [
    2356,
    2367
   ],
   "help_range": [
    2369,
    2399
   ]
  },
  {
   "param_range": [
    2404,
    2413
   ],
   "help_range": [
    2416,
    2444
   ]
  },
  {
   "param_range": [
    2449,
    2455
   ],
   "help_range": [
    2463,
    2503
   ]
  },
  {
   "param_range": [
    2508,
    2514
   ],
   "help_range": [
    2522,
    2600
   ]
  },
  {
   "param_range": [
    2605,
    2612
   ],
   "help_range": [
    2618,
    2654
   ]
  },
  {
   "param_range": [
    2659,
    2671
   ],
   "help_range": [
    2679,
    2707
   ]
  },
  {
   "param_range": [
    2712,
    2731
   ],
   "help_range": [
    2738,
    2767
   ]
  },
  {
   "param_range": [
    2772,
    2789
   ],
   "help_range": [
    2791,
    2938
   ]
  },
  {
   "param_range": [
    2943,
    2955
   ],
   "help_range": [
    2957,
    3218
   ]
  },
  {
   "param_range": [
    3223,
    3238
   ],
   "help_range": [
    3251,
    3336
   ]
  },
  {
   "param_range": [
    3341,
    3361
   ],
   "help_range": [
    3378,
    3870
   ]
  },
  {
   "param_range": [
    3877,
    3899
   ],
   "help_range": [
    3923,
    3993
   ]
  },
  {
   "param_range": [
    3999,
    4010
   ],
   "help_range": [
    4028,
    4263
   ]
  },
  {
   "param_range": [
    4269,
    4280
   ],
   "help_range": [
    4293,
    4439
   ]
  },
  {
   "param_range": [
    4445,
    4463
   ],
   "help_range": [
    4476,
    4615
   ]
  },
  {
   "param_range": [
    4621,
    4629
   ],
   "help_range": [
    4631,
    4782
   ]
  },
  {
   "param_range": [
    4788,
    4803
   ],
   "help_range": [
    4816,
    5379
   ]
  },
  {
   "param_range": [
    5384,
    5390
   ],
   "help_range": [
    5392,
    5431
   ]
  },
  {
   "param_range": [
    5435,
    5440
   ],
   "help_range": [
    5442,
    5456
   ]
  },
  {
   "param_range": [
    5460,
    5467
   ],
   "help_range": [
    5469,
    5502
   ]
  },
  {
   "param_range": [
    5506,
    5512
   ],
   "help_range": [
    5514,
    5528
   ]
  },
  {
   "param_range": [
    5532,
    5541
   ],
   "help_range": [
    5543,
    5582
   ]
  },
  {
   "param_range": [
    5586,
    5593
   ],
   "help_range": [
    5600,
    5688
   ]
  }
 ]
}