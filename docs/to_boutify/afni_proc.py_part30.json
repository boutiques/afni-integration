{"helptext": ["      If the subject anatomy and EPI masks are computed, then the default", "            operation is to run 3dABoverlap to evaluate the overlap between the", "            two masks.  Output is saved in a text file.", "", "            This option allows one to disable such functionality.", "", "            Please see '3dABoverlap -help' for more information.", "", "        -mask_type TYPE         : specify 'union' or 'intersection' mask type", "", "                e.g. -mask_type intersection", "                default: union", "", "            This option is used to specify whether the mask applied to the", "            analysis is the union of masks from each run, or the intersection.", "            The only valid values for TYPE are 'union' and 'intersection'.", "", "            This is not how to specify whether a mask is created, that is", "            done via the 'mask' block with the '-blocks' option.", "", "            Please see '3dAutomask -help', '3dMean -help' or '3dcalc -help'.", "            See also -mask_dilate, -blocks.", "", "        -combine_method METHOD  : specify method for combining echoes", "", "                e.g. -combine_method OC", "                default: OC", "", "            When using the 'combine' block to combine echoes (for each run),", "            this option can be used to specify the method used.   Methods:", "", "                mean             : simple mean of echoes", "                OC               : optimally combined (via @compute_OC_weights)", "                                   (current default is OC_A)", "                OC_A             : original log(mean()) regression method", "                OC_B             : newer log() time series regression method", "                                   (there is little difference between OC_A", "                                   and OC_B)", "                OC_tedort        : OC, and pass tedana orts to regression", "                tedana           : run tedana.py, using output dn_ts_OC.nii", "                tedana_OC        : run tedana.py, using output ts_OC.nii", "                                   (i.e. use tedana.py for optimally combined)", "                tedana_OC_tedort : tedana_OC, and include tedana orts", "", "            The OC/OC_A combine method is from Posse et. al., 1999, and then", "            applied by Kundu et. al., 2011 and presented by Javier in a 2017", "            summer course.", "", "            The 'tedort' methods are applied using @extract_meica_ortvec,", "            which projects the 'good' MEICA components out of the 'bad' ones,", "            and saves those as regressors to be applied later.  Otherwise, some", "            of the 'good' components are removed with the 'bad.  The tedort", "            method can be applied with either AFNI OC or tedana OC (meaning", "            the respective OC method would be applied to combine the echoes,", "            and the tedort components will be passed on to the regress block).", "", "            Please see '@compute_OC_weights -help' for more information.", "            Please see '@extract_meica_ortvec -help' for more information.", "            See also -combine_tedana_path.", "", "        -combine_opts_tedana OPT OPT ... : specify extra options for tedana.py", "", "                e.g. -combine_opts_tedana --sourceTEs=-1 --kdaw=10 --rdaw=1", "", "            Use this option to pass extra options through to tedana.py.", "            This applies to any tedana-based -combine_method.", "", "            See also -combine_method.", "", "        -combine_opts_tedwrap OPT OPT ... : pass options to tedana_wrapper.py", "", "                e.g. -combine_opts_tedwrap -tedana_is_exec", "", "            Use this option to pass extra options to tedana_wrapper.py.", "            This applies to any tedana-based -combine_method.", "", "        -combine_tedana_path PATH : specify path to tedana.py", "", "                e.g. -combine_tedana_path ~/testbin/meica.libs/tedana.py", "                default: from under afni binaries directory", "", "            If one wishes to use a version of tedana.py other than what comes", "            with AFNI, this option allows one to specify that file.", "", "            This applies to any tedana-based -combine_method.", "", "            See also -combine_method.", "", "        -scale_max_val MAX      : specify the maximum value for scaled data", "", "                e.g. -scale_max_val 1000", "                default 200", "", "            The scale step multiples the time series for each voxel by a", "            scalar so that the mean for that particular run is 100 (allowing", "            interpretation of EPI values as a percentage of the mean).", "", "            Values of 200 represent a 100% change above the mean, and so can", "            probably be considered garbage (or the voxel can be considered", "            non-brain).  The output values are limited so as not to sacrifice", "            the precision of the values of short datasets.  Note that in a", "            short (2-byte integer) dataset, a large range of values means", "            bits of accuracy are lost for the representation.", "", "            No max will be applied if MAX is <= 100.", "", "            Please see 'DATASET TYPES' in the output of '3dcalc -help'.", "            See also -scale_no_max.", "", "        -scale_no_max           : do not apply a limit to the scaled values", "", "            The default limit for scaled data is 200.  Use of this option will", "            remove any limit from being applied.", "", "            A limit on the scaled data is highly encouraged when working with", "            'short' integer data, especially when not applying a mask.", "", "            See also -scale_max_val.", "", "        -regress_3dD_stop       : 3dDeconvolve should stop after X-matrix gen", "", "            Use this option to tell 3dDeconvolve to stop after generating the", "            X-matrix (via -x1D_stop).  This is useful if the user only wishes", "            to run the regression through 3dREMLfit.", "", "            See also -regress_reml_exec.", "", "        -regress_anaticor       : generate errts using ANATICOR method", "", "            Apply the ANATICOR method of HJ Jo, regressing out the WMeLocal", "            time series, which varies across voxels.", "", "            WMeLocal is the average time series from all voxels within 45 mm", "            which are in the eroded white matter mask.", "", "            The script will run the standard regression via 3dDeconvolve (or", "            stop after setting up the X-matrix, if the user says to), and use", "            that X-matrix, possibly censored, in 3dTproject.  The WMeLocal time", "            series is applied along with the X-matrix to get the result.", "", "            Note that other 4-D time series might be regressed out via the", "            3dTproject step, as well.", "", "            In the case of task-based ANATICOR, -regress_reml_exec is required,", "            which uses 3dREMLfit to regress the voxel-wise ANATICOR regressors.", "", "            This option implies -mask_segment_anat and -mask_segment_erode.", "", "          * Consider use of -regress_anaticor_fast, instead.", "", "            Please see \"@ANATICOR -help\" for more detail, including the paper", "            reference for the method.", "            See also -mask_segment_anat, -mask_segment_erode, -regress_3dD_stop.", "            See also -regress_reml_exec.", "", "        -regress_anaticor_label LABEL : specify LABEL for ANATICOR ROI", "", "            To go with either -regress_anaticor or -regress_anaticor_fast,", "            this option is used the specifiy an alternate label of an ROI", "            mask to be used in the ANATICOR step.  The default LABEL is WMe", "            (eroded white matter from 3dSeg).", "", "            When this option is included, it is up to the user to make sure", "            afni_proc.py has such a label, either by including options:", "                -mask_segment_anat (and possibly -mask_segment_erode),", "                -regress_ROI_PC, -regress_ROI, or -anat_follower_ROI.", "", "            Any known label made via those options may be used.", "", "            See also -mask_segment_anat, -mask_segment_erode, -regress_ROI_PC,", "                -anat_follower_ROI.", "", "        -regress_anaticor_radius RADIUS : specify RADIUS for 3dLocalstat", "", "            To go with -regress_anaticor, use this option to specify the radius", "            of spheres within which local white matter is averaged.  A small", "            radius means the white matter is more local.  It is also faster.", "", "            If no white matter is found within the specified distance of some", "            voxel, the effect is that ANATICOR will simply not happen at that", "            voxel.  That is a reasonable \"failure\" case, in that it says there", "            is simply no white matter close enough to regress out (again, at", "            the given voxel).", "", "            See also -regress_anaticor.", "", "        -regress_anaticor_fast  : generate errts using fast ANATICOR method", "", "            This applies basically the same method as with -regress_anaticor,", "            above.  While -regress_anaticor creates WMeLocal dataset by", "            getting the average white matter voxel within a fixed radius, the", "          "], "params": [{"param_range": [1000, 1015], "help_range": [1026, 3041]}, {"param_range": [3051, 3071], "help_range": [3043, 3372]}, {"param_range": [3382, 3403], "help_range": [3374, 3646]}, {"param_range": [3656, 3676], "help_range": [3684, 4092]}, {"param_range": [4102, 4116], "help_range": [4128, 5066]}, {"param_range": [5076, 5089], "help_range": [5102, 5460]}, {"param_range": [5470, 5487], "help_range": [5496, 5791]}, {"param_range": [5801, 5818], "help_range": [5827, 7088]}, {"param_range": [7098, 7121], "help_range": [7130, 7581]}, {"param_range": [7598, 7616], "help_range": [7582, 7652]}, {"param_range": [7669, 7681], "help_range": [7653, 7903]}], "previous": "afni_proc.py_part29.json", "next": "afni_proc.py_part31.json"}