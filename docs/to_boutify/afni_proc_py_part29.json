{"helptext": ["rinciple component regression, as in:", "", "                -mask_import Tvent template_ventricle_3mm+tlrc \\", "                -mask_intersect Svent CSFe Tvent               \\", "                -mask_union WM_vent Svent WMe                  \\", "                -regress_ROI_PC WM_vent 3                      \\", "", "            See also -regress_ROI, -regress_ROI_PC, -regress_make_corr_vols,", "                     -regress_anaticor_label, -mask_intersect, -mask_union.", "", "        -mask_intersect NEW_LABEL MASK_A MASK_B : intersect 2 masks", "", "                e.g. -mask_intersect Svent CSFe Tvent", "", "            Use this option to intersect 2 known masks to create a new mask.", "            NEW_LABEL will be the label of the result, while MASK_A and MASK_B", "            should be labels for existing masks.", "", "            One could use this to intersect a template ventricle mask with each", "            subject's specific CSFe (eroded CSF) mask from 3dSeg, for example.", "", "            See -mask_import for more details.", "", "        -mask_union NEW_LABEL MASK_A MASK_B : take union of 2 masks", "", "                e.g. -mask_union WM_vent Svent WMe", "", "            Use this option to take the union of 2 known masks to create a new", "            mask.  NEW_LABEL will be the label of the result, while MASK_A and", "            MASK_B should be labels for existing masks.", "", "            One could use this to create union of CSFe and WMe for principle", "            component regression, for example.", "", "            See -mask_import for more details.", "", "        -mask_rm_segsy Y/N  : choose whether to delete the Segsy directory", "", "                e.g. -mask_rm_segsy no", "                default: yes", "", "            This option is a companion to -mask_segment_anat.", "", "            In the case of running 3dSeg to segment the anatomy, a resulting", "            Segsy directory is created.  Since the main result is a Classes", "            dataset, and to save disk space, the Segsy directory is removed", "            by default.  Use this option to preserve it.", "", "            See also -mask_segment_anat.", "", "        -mask_segment_anat Y/N  : choose whether to segment anatomy", "", "                e.g. -mask_segment_anat yes", "                default: no (if anat_final is skull-stripped)", "", "            This option controls whether 3dSeg is run to segment the anatomical", "            dataset.  Such a segmentation would then be resampled to match the", "            grid of the EPI data.", "", "            When this is run, 3dSeg creates the Classes dataset, which is a", "            composition mask of the GM/WM/CSF (gray matter, white matter and", "            cerebral spinal fluid) regions.  Then 3dresample is used to create", "            Classes_resam, the same mask but at the resolution of the EPI.", "", "            Such a dataset might have multiple uses, such as tissue-based", "            regression.  Note that for such a use, the ROI time series should", "            come from the volreg data, before any blur.", "", "          * Mask labels created by -mask_segment_anat and -mask_segment_erode", "            can be applied with -regress_ROI and -regress_ROI_PC.", "", "          * The CSF mask is of ALL CSF (not just in the ventricles), and is", "            therefore not very appropriate to use with tissue-based regression.", "", "            Consider use of -anat_uniform_method along with this option.", "", "            Please see '3dSeg -help' for more information.", "            Please see '3dUnifize -help' for more information.", "            See also -mask_rm_segsy, -anat_uniform_method -mask_segment_erode,", "             and -regress_ROI, -regress_ROI_PC.", "", "        -mask_segment_erode Y/N", "", "                e.g. -mask_segment_erode Yes", "                default: yes (if -regress_ROI or -regress_anaticor)", "", "            This option is a companion to -mask_segment_anat.", "", "            Anatomical segmentation is used to create GM (gray matter), WM", "            (white matter) and CSF masks.  When the _erode option is applied,", "            eroded versions of those masks are created via 3dmask_tool.", "", "            See also -mask_segment_anat, -regress_anaticor.", "            Please see '3dmask_tool -help' for more information.", "", "        -mask_test_overlap Y/N  : choose whether to test anat/EPI mask overlap", "", "                e.g. -mask_test_overlap No", "                default: Yes", "", "            If the subject anatomy and EPI masks are computed, then the default", "            operation is to run 3dABoverlap to evaluate the overlap between the", "            two masks.  Output is saved in a text file.", "", "            This option allows one to disable such functionality.", "", "            Please see '3dABoverlap -help' for more information.", "", "        -mask_type TYPE         : specify 'union' or 'intersection' mask type", "", "                e.g. -mask_type intersection", "                default: union", "", "            This option is used to specify whether the mask applied to the", "            analysis is the union of masks from each run, or the intersection.", "            The only valid values for TYPE are 'union' and 'intersection'.", "", "            This is not how to specify whether a mask is created, that is", "            done via the 'mask' block with the '-blocks' option.", "", "            Please see '3dAutomask -help', '3dMean -help' or '3dcalc -help'.", "            See also -mask_dilate, -blocks.", "", "        -combine_method METHOD  : specify method for combining echoes", "", "                e.g. -combine_method OC", "                default: OC", "", "            When using the 'combine' block to combine echoes (for each run),", "            this option can be used to specify the method used.   Methods:", "", "                mean             : simple mean of echoes", "                OC               : optimally combined (via @compute_OC_weights)", "                                   (current default is OC_A)", "                OC_A             : original log(mean()) regression method", "                OC_B             : newer log() time series regression method", "                                   (there is little difference between OC_A", "                                   and OC_B)", "                OC_tedort        : OC, and pass tedana orts to regression", "                tedana           : run tedana.py, using output dn_ts_OC.nii", "                tedana_OC        : run tedana.py, using output ts_OC.nii", "                      "], "params": [{"param_range": [1000, 1011], "help_range": [1038, 1499]}, {"param_range": [1509, 1523], "help_range": [1501, 2036]}, {"param_range": [2046, 2064], "help_range": [2038, 3549]}, {"param_range": [3559, 3578], "help_range": [3551, 4111]}, {"param_range": [4121, 4139], "help_range": [4113, 4614]}, {"param_range": [4624, 4634], "help_range": [4650, 5262]}], "previous": "afni_proc.py_part28.json", "next": "afni_proc.py_part30.json"}