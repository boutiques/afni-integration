{"helptext": ["d) method, use this", "            option.", "", "            Note that 3dREMLfit is used for the regression in either case,", "            particularly since the regressors are slice-based (they are", "            different for each slice).", "", "            Please see '3dREMLfit -help' for more information.", "", "        -ricor_regs REG1 REG2 ...       : specify ricor regressors (1 per run)", "", "                e.g. -ricor_regs slibase*.1D", "", "            This option is required with a 'ricor' processing block.", "", "            The expected format of the regressor files for RETROICOR processing", "            is one file per run, where each file contains a set of regressors", "            per slice.  If there are 5 runs and 27 slices, and if there are 13", "            regressors per slice, then there should be 5 files input, each with", "            351 (=27*13) columns.", "", "            This format is based on the output of RetroTS.m, included in the", "            AFNI distribution (as part of the matlab package), by Z Saad.", "", "        -ricor_regs_nfirst NFIRST       : ignore the first regressor timepoints", "", "                e.g. -ricor_regs_nfirst 2", "                default: 0", "", "            This option is similar to -tcat_remove_first_trs.  It is used to", "            remove the first few TRs from the -ricor_regs regressor files.", "", "            Since it is likely that the number of TRs in the ricor regressor", "            files matches the number of TRs in the original input dataset (via", "            the -dsets option), it is likely that -ricor_regs_nfirst should", "            match -tcat_remove_first_trs.", "", "            See also '-tcat_remove_first_trs', '-ricor_regs', '-dsets'.", "", "        -ricor_regs_rm_nlast NUM : remove the last NUM TRs from each regressor", "", "                e.g. -ricor_regs_rm_nlast 10", "                default: 0", "", "            For when the user wants a simple way to shorten each run.", "", "            See also -tcat_remove_last_trs.", "", "        -tshift_align_to TSHIFT OP : specify 3dTshift alignment option", "", "                e.g. -tshift_align_to -slice 14", "                default: -tzero 0", "", "            By default, each time series is aligned to the beginning of the", "            TR.  This option allows the users to change the alignment, and", "            applies the option parameters directly to the 3dTshift command", "            in the output script.", "", "            It is likely that the user will use either '-slice SLICE_NUM' or", "            '-tzero ZERO_TIME'.", "", "            Note that when aligning to an offset other than the beginning of", "            the TR, and when applying the -regress_stim_files option, then it", "            may be necessary to also apply -regress_stim_times_offset, to", "            offset timing for stimuli to later within each TR.", "", "            Please see '3dTshift -help' for more information.", "            See also '-regress_stim_times_offset'.", "", "        -tshift_interp METHOD   : specify the interpolation method for tshift", "", "                e.g. -tshift_interp -Fourier", "                e.g. -tshift_interp -cubic", "                default -quintic", "", "            Please see '3dTshift -help' for more information.", "", "        -tshift_opts_ts OPTS ... : specify extra options for 3dTshift", "", "                e.g. -tshift_opts_ts -tpattern alt+z", "", "            This option allows the user to add extra options to the 3dTshift", "            command.  Note that only one -tshift_opts_ts should be applied,", "            which may be used for multiple 3dTshift options.", "", "            Please see '3dTshift -help' for more information.", "", "        -blip_forward_dset      : specify a forward blip dataset", "", "                e.g. -blip_forward_dset epi_forward_blip+orig'[0..9]'", "", "            Without this option, the first TRs of the first input EPI time", "            series would be used as the forward blip dataset.", "", "            See also -blip_revers_dset.", "", "            Please see '3dQwarp -help' for more information, and the -plusminus", "            option in particular.", "", "        -blip_reverse_dset      : specify a reverse blip dataset", "", "                e.g. -blip_reverse_dset epi_reverse_blip+orig", "                e.g. -blip_reverse_dset epi_reverse_blip+orig'[0..9]'", "", "            EPI distortion correction can be applied via blip up/blip down", "            acquisitions.  Unless specified otherwise, the first TRs of the", "            first run of typical EPI data specified via -dsets is considered", "            to be the forward direction (blip up, say).  So only the reverse", "            direction data needs separate input.", "", "            Please see '3dQwarp -help' for more information, and the -plusminus", "            option in particular.", "", "        -blip_opts_qw OPTS ...  : specify extra options for 3dQwarp", "", "                e.g. -blip_opts_qw -noXdis -noZdis", "", "            This option allows the user to add extra options to the 3dQwarp", "            command specific to the 'blip' processing block.", "", "            There are many options (e.g. for blurring) applied in the 3dQwarp", "            command by afni_proc.py by default, so review the resulting script.", "", "            Please see '3dQwarp -help' for more information.", "", "        -tlrc_anat              : run @auto_tlrc on '-copy_anat' dataset", "", "                e.g. -tlrc_anat", "", "            Run @auto_tlrc on the anatomical dataset provided by '-copy_anat'.", "            By default, warp the anat to align with TT_N27+tlrc, unless the", "            '-tlrc_base' option is given.", "", "            The -copy_anat option specifies which anatomy to transform.", "", "         ** Note, use of this option has the same effect as application of the", "            'tlrc' block.", "", "            Please see '@auto_tlrc -help' for more information.", "            See also -copy_anat, -tlrc_base, -tlrc_no_ss and the 'tlrc' block.", "", "        -tlrc_base BASE_DSET    : run \"@auto_tlrc -base BASE_DSET\"", "", "                e.g. -tlrc_base TT_icbm452+tlrc", "                default: -tlrc_base TT_N27+tlrc", "", "            This option is used to supply an alternate -base dataset for", "            @auto_tlrc (or auto_warp.py).  Otherwise, TT_N27+tlrc will be used.", "", "            Note that the default operation of @auto_tlrc is to \"skull strip\"", "            the input dataset.  If this is not appropriate, consider also the", "            '-tlrc_no_ss' option.", "", "            Please see '@auto_tlrc -help' for more information.", "            See also -tlrc_anat, -tlrc_no_ss.", "", "        -tlrc_NL_warp           : use non-linear for template alignment", "", "                e.g. -tlrc_NL_warp", "", "            If this option is applied, then auto_warp.py is applied for the", "            transformation to standard space, rather than @auto_tlrc, which in", "            turn applies 3dQwarp (rather than 3dWarpDrive in @auto_tlrc).", "", "            The output datasets from this operation are:", "", "                INPUT_ANAT+tlrc         : standard space version of anat", "                anat.un.aff.Xat.1D      : affine xform to standard space", "                anat.un.aff.qw_WARP.nii : non-linear xform to standard space", "                                          (displacement vectors across volume)", "", "            The resulting ANAT dataset is copied out of the awpy directory", "            back into AFNI format, and with the original name but new view,", "            while the 2 transformation files (one text file of 12 numbers, one", "            3-volume dataset vectors) are moved out with the original names.", ""], "params": [{"param_range": [1000, 1018], "help_range": [1034, 1642]}, {"param_range": [1652, 1672], "help_range": [1679, 1911]}, {"param_range": [1921, 1937], "help_range": [1950, 2844]}, {"param_range": [2854, 2868], "help_range": [2880, 3108]}, {"param_range": [3118, 3133], "help_range": [3110, 3511]}, {"param_range": [3521, 3539], "help_range": [3547, 3942]}, {"param_range": [3952, 3970], "help_range": [3978, 4611]}, {"param_range": [4621, 4634], "help_range": [4613, 5091]}, {"param_range": [5101, 5111], "help_range": [5127, 5719]}, {"param_range": [5729, 5739], "help_range": [5755, 6340]}], "previous": "afni_proc.py_part21.json", "next": "afni_proc.py_part23.json"}