{"helptext": ["strieux atlas,", "    which might be nicer for probability maps, though the Desikan-Killiany", "    aparc+aseg segmentation is currently used for segmenting white matter and", "    ventricles.  I have not studied the differences.", "", "", "    Example 11 brings the aparc.a2009s+aseg segmentation along (for viewing or", "    atlas purposes, aligned with the result), though the white matter and", "    ventricle masks are based instead on aparc+aseg.nii.", "", "        # run (complete) FreeSurfer on FT.nii", "        recon-all -all -subject FT -i FT.nii", "", "        # import to AFNI, in NIFTI format", "        @SUMA_Make_Spec_FS -sid FT -NIFTI", "", "        # create ventricle and white matter masks", "        #", "        # ** warning: it would be good to convert these indices to labels", "        #             in case the output from FreeSurfer is changed", "", "        3dcalc -a aparc+aseg.nii -datum byte -prefix FT_vent.nii \\", "               -expr 'amongst(a,4,43)'", "        3dcalc -a aparc+aseg.nii -datum byte -prefix FT_WM.nii \\", "               -expr 'amongst(a,2,7,41,46,251,252,253,254,255)'", "", "        # note: 16 (brainstem) was incorrectly included from @ANATICOR", "        #       and then in this help through 2016", "", "    After this, FT_SurfVol.nii, FT_vent.nii and FT_WM.nii (along with the", "    basically unused aparc.a2009s+aseg.nii) are passed to afni_proc.py.", "", "", "  * Be aware that the output from FreeSurfer (e.g. FT_SurfVol.nii) will", "    usually not quite align with the input (e.g. FT.nii).  So parcellation", "    datasets will also not quite align with the input (FT.nii).  Therefore,", "    when passing parcellation volumes to afni_proc.py for tissue-based", "    regression, it is important to use the anatomy output from FreeSurfer", "    as the subject anatomy (input to afni_proc.py).  That way, the anatomy", "    and parcellation datasets will be in register, and therefore the EPI", "    will eventually align with the parcellation datasets.", "", "    If it is important to have the FreeSurfer output align with the input,", "    it might help to pass a modified volume to FreeSurfer.  Use 3dresample", "    and then 3dZeropad (if necessary) to make a volume with 1 mm^3 voxels", "    and an even number voxels in each direction.  The @SUMA_Make_Spec_FS", "    help provides some details on this.", "", "    The exact 3dZeropad command depends on the grid output by 3dresample.", "", "        3dresample -inset FT_anat+orig -dxyz 1 1 1 -prefix FT.1 -rmode Cu", "        3dZeropad -L 1 -prefix FT.1.z.nii FT.1+orig", "        recon-all -all -subject FT -i FT.1.z.nii", "        @SUMA_Make_Spec_FS -sid FT -NIFTI", "", "    --------------------------------------------------", "    TIMING FILE NOTE: ~2~", "", "    One issue that the user must be sure of is the timing of the stimulus", "    files (whether -regress_stim_files or -regress_stim_times is used).", "", "    The 'tcat' step will remove the number of pre-steady-state TRs that the", "    user specifies (defaulting to 0).  The stimulus files, provided by the", "    user, must match datasets that have had such TRs removed (i.e. the stim", "    files should start _after_ steady state has been reached).", "", "    --------------------------------------------------", "    MASKING NOTE: ~2~", "", "    The default operation of afni_proc.py has changed (as of 24 Mar, 2009).", "    Prior to that date, the default was to apply the 'epi' mask.  As of", "    17 Jun 2009, only the 'extents' mask is, if appropriate.", "", "    ---", "", "    There may be 4 masks created by default, 3 for user evaluation and all for", "    possible application to the EPI data (though it may not be recommended).", "    The 4th mask (extents) is a special one that will be applied at volreg when", "    appropriate, unless the user specifies otherwise.", "", "    If the user chooses to apply one of the masks to the EPI regression (again,", "    not necessarily recommended), it is done via the option -mask_apply while", "    providing the given mask type (epi, anat, group or extents).", "", "    --> To apply a mask during regression, use -mask_apply.", "", "    Mask descriptions (afni_proc.py name, dataset name, short description):", "", "    1. epi (\"full_mask\") : EPI Automask", "", "       An EPI mask dataset will be created by running '3dAutomask -dilate 1'", "       on the EPI data after blurring.  The 3dAutomask command is executed per", "       run, after which the masks are combined via a union operation.", "", "    2. anat (\"mask_anat.$subj\") : anatomical skull-stripped mask", "", "       If possible, a subject anatomy mask will be created.  This anatomical", "       mask will be created from the appropriate skull-stripped anatomy,", "       resampled to match the EPI (that is output by 3dvolreg) and changed into", "       a binary mask.", "", "       This requires either the 'align' block or a tlrc anatomy (from the", "       'tlrc' block, or just copied via '-copy_anat').  Basically, it requires", "       afni_proc.py to know of a skull-stripped anatomical dataset.", "", "       By default, if both the anat and EPI masks exist, the overlap between", "       them will be computed for evaluation.", "", "    3. group (\"mask_group\") : skull-stripped @auto_tlrc base", "", "       If possible, a group mask will be created.  This requires the 'tlrc'", "       block, from which the @auto_tlrc -base dataset is chosen as the group", "       anatomy.  It also requires '-volreg_warp_epi' so that the EPI is in", "       standard space.  The group anatomy is then resampled to match the EPI", "       and changed into a binary mask.", "", "    4. extents (\"mask_extents\") : mask based on warped EPI extents", "", "       In the case of transforming the EPI volumes to match the anatomical", "       volume (via either -volreg_align_e2a or -volreg_tlrc_warp), an extents", "       mask will be created.  This is to avoid a motion artifact that arises", "       when transforming from a smaller volume (EPI) to a larger one (anat).", "", "    ** Danger Will Robinson! **", "", "       This EPI extents mask is considered necessary because the align/warp", "       transformation that is applied on top of the volreg alignment transform", "       (applied at once), meaning the transformation from the EPI grid to the", "       anatomy grid will vary per TR.", "", "       The effect of this is seen at the edge voxels (extent edge), where a", "       time series could be zero for many of the TRs, but have valid data for", "       the rest of them.  If this timing just happens to correlate with any", "       regressor, the result could be a strong \"activation\" for that regressor,", "       but which would be just a motion based artifact.", "", "       What makes this particularly bad is that if it does happen, it tends to", "       happen for *a cluster* of many voxels at once, possibly an entire slice.", "       Such an effect is compounded by any additional blur.  The result can be", "       an entire cluster of false activation, large enough to survive multiple", "       comparison corrections.", "", "       Thanks to Laura Thomas and Brian Bones for finding this artifact.", "", "   --> To deal with this, a time series of all 1s is created on the original", "       EPI grid space.  Then for each run it is warped with to the same list of", "       transformations that is applied to the EPI data in the volreg step", "       (volreg xform and either alignment to anat or warp to standard space).", "       The result is a time series of extents of each original volume within", "       the new grid.", "", "       These volumes are then intersected over all TRs of all runs.  The final", "       mask is the set of voxels that have valid data at every TR of every run.", "       Yay.", "", "    5. Classes and Classes_resam: GM, WM, CSF class masks from 3dSeg", "", "       By default, unless the user requests otherwise (-mask_segment_anat no),", "       and if anat_final is skull-stripped, then 3dSeg will be used to segment", "       the anatomy into gray matter, white matter and CSF classes.", "", "       A dataset named Classes is the result of running 3dSeg, which is then", "       resampled to match the EPI and named Classes_resam.", "", "       If the user wanted to, this dataset could be used for regression of", "       said tissue classes (or eroded versions).", "", "", "    --- masking, continued...", "", "    Note that it may still not be a good idea to apply any of the masks to the", "    regression, as it might then be necessary to intersect such masks across", "    all subjects, though applying the 'group' mask might be reasonable.", "", " ** Why has the default been changed?", "", "    It seems much better not to mask the regression data in the single-subject", "    analysis at all, send _all_ of the results to group space, and apply an", "    anatomically-based mask there.  That could be computed from the @auto_tlrc", "    reference dataset or from the union of skull-stripped subject anatomies.", "", "    Since subjects have varying degrees of signal dropout in valid brain areas", "    of the EPI data, the resulting EPI intersection mask that would be required", "    in group space may exclude edge regions that are otherwise desirable.", "", "    Also, it is helpful to see if much 'activation' appears outside the brain.", "    This could be due to scanner or interpolation artifacts, and is useful to", "    note, rather than to simply mask out and never see.", "", "    Rather than letting 3dAutomask decide which brain areas should not be", "    considered valid, create a mask based on the anatomy _after_ the results", "    have been warped to a standard group space.  Then perhaps dilate the mask", "    by one voxel.  Example #11 from '3dcalc -help' shows how one might dilate.", "", " ** Note that the EPI data can now be warped to standard space at the volreg", "    step.  In that case, it might be appropriate to mask the EPI data based", "    on the Talairach template, such as what is used for -base in @auto_tlrc.", "    This can be done via '-mask_apply group'.", "", "    ---", "", " ** For those who have processed some of their data with the older method:", "", "    Note that this change should not be harmful to those who have processed", "    data with older versions of afni_proc.py, as it only adds non-zero voxel", "    values to the output datasets.  If some subjects were analyzed with the", "    older version, the processing steps should not need to change.  It is still", "    necessary to apply an intersection mask across subjects in group space.", "", "    It might be okay to create the intersection mask from only those subjects", "    which were masked in the regression, however one might say that biases the", "    voxel choices toward those subjects, though maybe that does not matter.", "    Any voxels used would still be across all subjects.", "", "    ---", "", "    A mask dataset is necessary when computing blur estimates from the epi and", "    errts datasets.  Also, since it is nice to simply see what the mask looks", "    like, its creation has been left in by default.", "", "    The '-regress_no_mask' option is now unnecessary.", "", "    ---", "", "    Note that if no mask were applied in the 'scaling' step, large percent", "    changes could result.  Because large values would be a detriment to the", "    numerical resolution of the scaled short data, the default is to truncate", "    scaled values at 200 (percent), which should not occur in the brain.", "", "    --------------------------------------------------", "    BLIP NOTE: ~2~", "", "    application of reverse-blip (blip-up/blip-down) registration:", "", "       o compute the median of the forward and reverse-blip data", "       o align them using 3dQwarp -plusminus", "          -> the main output warp is the square root of the forward warp", "             to the reverse, i.e. it warps the forward data halfway", "          -> in theory, this warp should make the EPI anatomically accurate", "", "    order of operations:", "", "       o the blip warp is computed after all initial temporal operations", "         (despike, ricor, tshift)", "       o and before all spatial operations (anat/EPI align, tlrc, volreg)", "", "    notes:", "", "       o If no forward blip time series (volume?) is provided by the user,", "         the first time points from the first run will be used (using the", "         same number of time points as in the reverse blip time series).", "       o As usual, all registration transformations are combined.", "", "    differences with unWarpEPI.py (R Cox, D Glen and V Roopchansingh):", "", "                        afni_proc.py            unWarpEPI.py", "                        --------------------    --------------------", "       tshift step:     before unwarp           after unwarp", "                        (option: after unwarp)", "", "       volreg program:  3dvolreg                3dAllineate", "", "       volreg base:     as before               median warped dset", "                        (option: MEDIAN_BLIP)   (same as MEDIAN_BLIP)", "", "       unifize EPI?     no (option: yes)        yes", "       (align w/anat)", "", "    --------------------------------------------------", "    ANAT/EPI ALIGNMENT CASES NOTE: ~2~", "", "    This outlines the effects of alignment options, to help decide what options", "    seem appropriate for various cases.", "", "    1. EPI to EPI alignment (the volreg block)", "", "        Alignment of the EPI data to a single volume is based on the 3 options", "        -volreg_align_to, -volreg_base_dset and -volreg_base_ind, where the", "        first option is by far the most commonly used.", "", "        Note that a good alternative is: '-volreg_align_to MIN_OUTLIER'.", "", "        The logic of EPI alignment in afni_proc.py is:", "", "            a. if -volreg_base_dset is given, align to that", "               (this volume is copied locally as the dataset ext_align_epi)", "            b. otherwise, use the -volreg_align_to or -volreg_base_ind volume", "", "        The typical case is to align the EPI to one of the volumes used in", "        pre-processing (where the dataset is provided by -dsets and where the", "        particular TR is not removed by -tcat_remove_first_trs).  If the base", "        volume is the first or third (TR 0 or 2) from the first run, or is the", "        last TR of the last run, then -volreg_align_to can be used.", "", "        To specify a TR that is not one of the 3 just stated (first, third or", "        last), -volreg_base_ind can be used.", "", "        To specify a volume that is NOT one of those used in pre-processing", "        (such as the first pre-steady state volume, which would be excluded by", "        the option -tcat_remove_first_trs), use -volreg_base_dset.", "", "    2. anat to EPI alignment cases (the align block)", "", "        This is specific to the 'align' processing block, where the anatomy is", "        aligned to the EPI.  The focus is on which EPI volume the anat gets", "        aligned to.  Whether this transformation is inverted in the volreg", "        block (to instead align the EPI to the anat via -volreg_align_e2a) is", "        an independent consideration.", "", "        The logic of which volume the anatomy gets aligned to is as follows:", "            a. if -align_epi_ext_dset is given, use that for anat alignment", "            b. otherwise, if -volreg_base_dset, use that", "            c. otherwise, use the EPI base from the EPI alignment choice", "", "        To restate this: the anatomy gets aligned to the same volume the EPI", "        gets aligned to *unless* -align_epi_ext_dset is given, in which case", "        that volume is used.", "", "        The entire purpose of -align_epi_ext_dset is for the case where the", "        user might want to align the anat to a different volume than what is", "        used for the EPI (e.g. align anat to a pre-steady state TR but the EPI", "        to a steady state one).", "", "        Output:", "", "           The result of the align block is an 'anat_al' dataset.  This will be", "           in alignment with the EPI base (or -align_epi_ext_dset).", "", "           In the default case of anat -> EPI alignment, the aligned anatomy", "           is actually useful going forward, and is so named 'anat_al_keep'.", "", "           Additionally, if the -volreg_align_e2a option is used (thus aligning", "           the EPI to the original anat), then the aligned anat dataset is no", "           longer very useful, and is so named 'anat_al_junk'.  However, unless", "           an anat+tlrc dataset was copied in for use in -volreg_tlrc_adwarp,", "           the skull-striped anat (anat_ss) becomes the current one going", "           forward.  That is identical to the original anat, except that it", "           went through the skull-stripping step in align_epi_anat.py.", "", "           At that point (e2a case) the pb*.volreg.* datasets are aligned with", "           the original anat or the skull-stripped original anat (and possibly", "           in Talairach space, if the -volreg_tlrc_warp or _adwarp option was", "           applied).", "", "         Checking the results:", "", "           The pb*.volreg.* volumes should be aligned with the anat.  If", "           -volreg_align_e2a was used, it will be with the original anat.", "           If not, then it will be with anat_al_keep.", "", "           Note that at the end of the regress block, whichever anatomical", "           dataset is deemed \"in alignment\" with the stats dataset will be", "           copied to anat_final.$subj.", "", "           So compare the volreg EPI with the final anatomical dataset.", "", "    --------------------------------------------------", "    ANAT/EPI ALIGNMENT CORRECTIONS NOTE: ~2~", "", "    Aligning the anatomy and EPI is sometimes difficult, particularly depending", "    on the contrast of the EPI data (between tissue types).  If the alignment", "    fails to do a good job, it may be necessary to run align_epi_anat.py in a", "    separate location, find options that help it to succeed, and then apply", "    those options to re-process the data with afni_proc.py.", "", "    1. If the anat and EPI base do not start off fairly close in alignment,", "       the -giant_move option may be needed for align_epi_anat.py.  Pass this", "       option to AEA.py via the afni_proc.py option -align_opts_aea:", "", "            afni_proc.py ... -align_opts_aea -giant_move", "", "    2. The default cost function used by align_epi_anat.py is lpc (local", "       Pearson correlation).  If this cost function does not work (probably due", "       to poor or unusual EPI contrast), then consider cost functions such as", "       lpa (absolute lpc), lpc+ (lpc plus fractions of other cost functions) or", "       lpc+ZZ (approximate with lpc+, but finish with pure lpc).", "", "       The lpa and lpc+ZZ cost functions are common alternatives.  The", "       -giant_move option may be necessary independently.", "", "       Examples of some helpful options:", "", "         -align_opts_aea -cost lpa", "         -align_opts_aea -giant_move", "         -align_opts_aea -cost lpc+ZZ -giant_move", "         -align_opts_aea -check_flip", "         -align_opts_aea -cost lpc+ZZ -giant_move -resample off", "         -align_opts_aea -skullstrip_opts -blur_fwhm 2", "", "    3. Testing alignment with align_epi_anat.py directly.", "", "       When having alignment problems, it may be more efficient to copy the", "       anat and EPI alignment base to a new directory, figure out a good cost", "       function or other options, and then apply them in a new afni_proc.py", "       command.", "", "       For testing purposes, it helps to test many cost functions at once.", "       Besides the cost specified by -cost, other cost functions can be applied", "       via -multi_cost.  This is efficient, since all of the other processing", "       does not need to be repeated.  For example:", "", "         align_epi_anat.py -anat2epi                    \\", "                -anat subj99_anat+orig                  \\", "                -epi pb01.subj99.r01.tshift+orig        \\", "                -epi_base 0 -volreg off -tshift off     \\", "                -giant_move                             \\", "                -cost lpc -multi_cost lpa lpc+ZZ mi", "", "       That adds -giant_move, and uses the basic lpc cost function along with", "       3 additional cost functions (lpa, lpc+ZZ, mi).  The result is 4 new", "       anatomies aligned to the EPI, 1 per cost function:", "", "               subj99_anat_al+orig         - cost func lpc      (see -cost opt)", "               subj99_anat_al_lpa+orig     - cost func lpa         (additional)", "               subj99_anat_al_lpc+ZZ+orig  - cost func lpc+ZZ      (additional)", "               subj99_anat_al_mi+orig      - cost func mi          (additional)", "", "       Also, if part of the dataset gets clipped in the case of -giant_move,", "       consider the align_epi_anat.py option '-resample off'.", "", "    --------------------------------------------------", "    WARP TO TLRC NOTE: ~2~", "", "    afni_proc.py can now apply a +tlrc transformation to the EPI data as part", "    of the volreg step via the option '-volreg_tlrc_warp'.  Note that i"], "params": [{"param_range": [1000, 1002], "help_range": [985, 17999]}, {"param_range": [18007, 18018], "help_range": [18000, 18099]}, {"param_range": [18110, 18125], "help_range": [18101, 18135]}, {"param_range": [18145, 18160], "help_range": [18136, 18172]}, {"param_range": [18182, 18197], "help_range": [18173, 18222]}, {"param_range": [18232, 18247], "help_range": [18223, 18259]}, {"param_range": [18269, 18284], "help_range": [18260, 18323]}, {"param_range": [18333, 18348], "help_range": [18324, 19086]}, {"param_range": [19103, 19105], "help_range": [19087, 19144]}, {"param_range": [19161, 19170], "help_range": [19145, 19202]}], "previous": "afni_proc.py_part12.json", "next": "afni_proc.py_part14.json"}