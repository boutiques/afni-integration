{"helptext": ["in mask  full_mask         3dAutomask", "                CSF     CSF             mask_CSF_resam    3dSeg -> Classes", "                CSFe    CSF (eroded)    mask_CSFe_resam   3dSeg -> Classes", "                GM      gray matter     mask_GM_resam     3dSeg -> Classes", "                GMe     gray (eroded)   mask_GMe_resam    3dSeg -> Classes", "                WM      white matter    mask_WM_resam     3dSeg -> Classes", "                WMe     white (eroded)  mask_WMe_resam    3dSeg -> Classes", "", "            Other ROI labels can come from -anat_follower_ROI options, i.e.", "            imported masks.", "", "          * Use of this option requires either -mask_segment_anat or labels", "            defined via -anat_follower_ROI options.", "", "            See also -mask_segment_anat/_erode, -anat_follower_ROI.", "            Please see '3dSeg -help' for more information on the masks.", "", "        -regress_ROI_PC LABEL NUM_PC    : regress out PCs within mask", "", "                e.g. -regress_ROI_PC vent 3", "                     -regress_ROI_PC WMe 3", "", "            Add the top principal components (PCs) over an anatomical mask as", "            regressors of no interest.", "", "              - LABEL   : the class label given to this set of regressors", "              - NUM_PC  : the number of principal components to include", "", "            The LABEL can apply to something defined via -mask_segment_anat", "            maybe with -mask_segment_erode, or from -anat_follower_ROI", "            (assuming 'epi' grid), or 'brain' (full_mask).  The -mask_segment*", "            options define ROI labels implicitly (see above), while the user", "            defines ROI labels in any -anat_follower_ROI options.", "", "            Method (including 'follower' steps):", "", "              If -anat_follower_ROI is used to define the label, then the", "              follower ROI steps would first be applied to that dataset.", "", "              If ROIs are created 'automatically' via 3dSeg (-mask_segment_anat)", "              then the follower steps do not apply.", "", "              F1. if requested (-anat_follower_erode) erode the ROI mask", "              F2. apply all anatomical transformations to the ROI mask", "                  a. catenate all anatomical transformations", "                     i.   anat to EPI?", "                     ii.  affine xform of anat to template?", "                     iii. subsequent non-linear xform of anat to template?", "                  b. sample the transformed mask on the EPI grid", "                  c. use nearest neighbor interpolation, NN", "", "           Method (post-mask alignment):", "", "              P1. extract the top NUM_PC principal components from the volume", "                  registered EPI data, over the mask", "                  a. detrend the volume registered EPI data at the polort level", "                     to be used in the regression, per run", "                  b. catenate the detrended volreg data across runs", "                  c. compute the top PCs from the (censored?) time series", "                  d. if censoring, zero-fill the time series with volumes of", "                     zeros at the censored TRs, to maintain TR correspondence", "              P2. include those PCs as regressors of no interest", "                  a. apply with: 3dDeconvolve -ortvec PCs LABEL", "", "            Typical usage might start with the FreeSurfer parcellation of the", "            subject's anatomical dataset, followed by ROI extraction using", "            3dcalc (to make a new dataset of just the desired regions).  Then", "            choose the number of components to extract and a label.", "", "            That ROI dataset, PC count and label are then applied with this", "            option.", "", "          * The given MASK must be in register with the anatomical dataset,", "            though it does not necessarily need to be on the anatomical grid.", "", "          * Multiple -regress_ROI_PC options can be used.", "", "            See also -anat_follower, -anat_follower_ROI, -regress_ROI_erode,", "            and -regress_ROI.", "", "        -regress_ROI_per_run LABEL ... : regress these ROIs per run", "", "                e.g. -regress_ROI_per_run vent", "                e.g. -regress_ROI_per_run vent WMe", "", "            Use this option to create the given ROI regressors per run.", "            Instead of creating one regressor spanning all runs, this option", "            leads to creating one regressor per run, akin to splitting the", "            long regressor across runs, and zero-padding to be the same length.", "", "            See also -regress_ROI_PC, -regress_ROI_PC_per_run.", "", "        -regress_ROI_PC_per_run LABEL ... : regress these PCs per run", "", "                e.g. -regress_ROI_PC_per_run vent", "                e.g. -regress_ROI_PC_per_run vent WMe", "", "            Use this option to create the given PC regressors per run.  So", "            if there are 4 runs and 3 'vent' PCs were requested with the", "            option \"-regress_ROI_PC vent 3\", then applying this option with", "            the 'vent' label results in not 3 regressors (one per PC), but", "            12 regressors (one per PC per run).", "", "            Note that unlike the -regress_ROI_per_run case, this is not merely", "            splitting one signal across runs.  In this case the principle", "            components are be computed per run, almost certainly resulting in", "            different components than those computed across all runs at once.", "", "            See also -regress_ROI_PC, -regress_ROI_per_run.", "", "        -regress_RSFC           : perform bandpassing via 3dRSFC", "", "            Use this option flag to run 3dRSFC after the linear regression", "            step (presumably to clean resting state data).  Along with the", "            bandpassed data, 3dRSFC will produce connectivity parameters,", "            saved in the RSFC directory by the proc script.", "", "            The -regress_bandpass option is required, and those bands will be", "            passed directly to 3dRSFC.  Since bandpassing will be done only", "            after the linear regression, censoring is not advisable.", "", "            See also -regress_bandpass, -regress_censor_motion.", "            Please see '3dRSFC -help' for more information.", "", "        -regress_RONI IND1 ...  : specify a list of regressors of no interest", "", "                e.g. -regress_RONI 1 17 22", "", "            Use this option flag regressors as ones of no interest, meaning", "            they are applied to the baseline (for full-F) and the corresponding", "            beta weights are not output (by default at least).", "", "            The indices in the list should match those given to 3dDeconvolve.", "            They start at 1 first with the main regressors, and then with any", "            extra regressors (given via -regress_extra_stim_files).  Note that", "            these do not apply to motion regressors.", "", "            The user is encouraged to check the 3dDeconvolve command in the", "            processing script, to be sure they are applied correctly.", "", "        -regress_stim_labels LAB1 ...   : specify labels for stimulus classes", "", "                e.g. -regress_stim_labels houses faces donuts", "                default: stim01 stim02 stim03 ...", "", "            This option is used to apply a label to each stimulus type.  The", "            number of labels should equal the number of files used in the", "            -regress_stim_times option, or the total number of columns in the", "            files used in the -regress_stim_files option.", "", "            These labels will be applied as '-stim_label' in 3dDeconvolve.", "", "            Please see '3dDeconvolve -help' for more information.", "            See also -regress_stim_times, -regress_stim_labels.", "", "        -regress_stim_times FILE1 ... : specify files used for -stim_times", "", "                e.g. -regress_stim_times ED_stim_times*.1D", "                e.g. -regress_stim_times times_A.1D times_B.1D times_C.1D", "", "            3dDeconvolve will be run using '-stim_times'.  This option is", "            used to specify the stimulus timing files to be applied, one", "            file per stimulus type.  The order of the files given on the", "            command line will be the order given to 3dDeconvolve.  Each of", "            these timing files will be given along with the basis function", "            specified by '-regress_basis'.", "", "            The user must specify either -regress_stim_times or", "            -regress_stim_files if regression is performed, but not both.", "            Note the form of the files is one row per run.  If there is at", "            most one stimulus per run, please add a trailing '*'.", "", "            Labels may be specified using the -regress_stim_labels option.", "", "            These two examples of such files are for a 3-run experiment.  In", "            the second example, there is only 1 stimulus at all, occurring in", "            run #2.", "", "                e.g.            0  12.4  27.3  29", "                                *", "                                30 40 50", "", "                e.g.            *", "                                20 *", "                                *", "", "            Please see '3dDeconvolve -help' for more information, or the link:", "                https://afni.nimh.nih.gov/afni/doc/misc/3dDeconvolveSummer2004", "            See also -regress_stim_files, -regress_stim_labels, -regress_basis,", "                     -regress_basis_normall, -regress_polort.", "", "        -re"], "params": [{"param_range": [1000, 1012], "help_range": [1000, 3946]}, {"param_range": [3961, 3981], "help_range": [3953, 4488]}, {"param_range": [4498, 4510], "help_range": [4490, 5383]}, {"param_range": [5393, 5406], "help_range": [5419, 6083]}, {"param_range": [6093, 6106], "help_range": [6085, 6862]}, {"param_range": [6872, 6892], "help_range": [6864, 7206]}, {"param_range": [7219, 7238], "help_range": [7207, 7549]}, {"param_range": [7559, 7578], "help_range": [7551, 8238]}], "previous": "afni_proc.py_part37.json", "next": "afni_proc.py_part39.json"}