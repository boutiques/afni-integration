{"helptext": ["runs dataset", "            (input to 3dDeconvolve), and the \"noise\" is the errts dataset (the", "            residuals from 3dDeconvolve).  TSNR is computed (per voxel) as the", "            mean signal divided by the standard deviation of the noise.", "", "               TSNR = average(signal) / stdev(noise)", "", "            The main difference between the TSNR datasets from the volreg and", "            regress blocks is that the data in the regress block has been", "            smoothed and \"completely\" detrended (detrended according to the", "            regression model: including polort, motion and stim responses).", "", "            Use this option to prevent the TSNR dataset computation in the", "            'regress' block.", "", "            See also -volreg_compute_tsnr.", "", "        -regress_fout yes/no         : output F-stat sub-bricks", "", "                e.g. -regress_fout no", "                default: yes", "", "            This option controls whether to apply -fout in 3dDeconvolve.  The", "            default is yes.", "", "        -regress_make_cbucket yes/no : add a -cbucket option to 3dDeconvolve", "", "                default: 'no'", "", "            Recall that the -bucket dataset (no 'c') contains beta weights and", "            various statistics, but generally not including baseline terms", "            (polort and motion).", "", "            The -cbucket dataset (with a 'c') is a little different in that it", "            contains:", "                - ONLY betas (no t-stats, no F-stats, no contrasts)", "                - ALL betas (including baseline terms)", "            So it has one volume (beta) per regressor in the X-matrix.", "", "            The use is generally for 3dSynthesize, to recreate time series", "            datasets akin to the fitts, but where the user can request any set", "            of parameters to be included (for example, the polort and the main", "            2 regressors of interest).", "", "            Setting this to 'yes' will result in the -cbucket option being", "            added to the 3dDeconvolve command.", "", "            Please see '3dDeconvolve -help' for more details.", "", "        -regress_make_corr_vols LABEL1 ... : create correlation volume dsets", "", "                e.g. -regress_make_corr_vols aeseg FSvent", "                default: one is made against full_mask", "", "            This option is used to specify extra correlation volumes to compute", "            based on the residuals (so generally for resting state analysis).", "", "            What is a such a correlation volume?", "", "               Given: errts     : the residuals from the linear regression", "                      a mask    : to correlate over, e.g. full_mask", "", "               Compute: for each voxel (in the errts, say), compute the average", "                  correlation over all voxels within the given mask.  In some", "                  sense, this is a measure of self correlation over a specified", "                  region.", "", "               This is a mean correlation rather than a correlation with the", "               mean.", "", "            The labels specified can be from any ROI mask, such as those coming", "            via -anat_follower_ROI, -regress_ROI_PC, or from the automatic", "            masks from -mask_segment_anat.", "", "            See also -anat_follower_ROI, -regress_ROI_PC, -mask_segment_anat.", "", "        -regress_mot_as_ort yes/no : regress motion parameters using -ortvec", "", "                default: no", "", "            By default, motion parameters are applied to 3dvolreg using", "            -stim_file and -stim_base.  Use this option to apply them using", "            -ortvec, instead.", "", "            One difference is in having a \"cleaner\" 3dDeconvolve command,", "            without the many extra -stim_file options.  Another is a change in", "            the labels associated with the individual parameters.  Otherwise,", "            all results should be the same.", "", "        -regress_motion_per_run : regress motion parameters from each run", "", "                default: regress motion parameters catenated across runs", "", "            By default, motion parameters from the volreg block are catenated", "            across all runs, providing 6 (assuming 3dvolreg) regressors of no", "            interest in the regression block.", "", "            With -regress_motion_per_run, the motion parameters from each run", "            are used as separate regressors, providing a total of (6 * nruns)", "            regressors.", "", "            This allows for the magnitudes of the regressors to vary over each", "            run, rather than using a single (best) magnitude over all runs.", "            So more motion-correlated variance can be accounted for, at the", "            cost of the extra degrees of freedom (6*(nruns-1)).", "", "            This option will apply to all motion regressors, including", "            derivatives (if requested).", "", "            ** This option was previously called -volreg_regress_per_run. **", "", "        -regress_skip_first_outliers NSKIP : ignore the first NSKIP TRs", "", "                e.g. -regress_skip_first_outliers 4", "                default: 0", "", "            When using -regress_censor_outliers, any TR with too high of an", "            outlier fraction will be censored.  But depending on the scanner", "            settings, early TRs might have somewhat higher intensities, leading", "            to them possibly being inappropriately censored.", "", "            To avoid censoring any the first few TRs of each run, apply the", "            -regress_skip_first_outliers option.", "", "            See also -regress_censor_outliers.", "", "        -regress_compute_fitts       : compute fitts via 3dcalc, not 3dDecon", "", "            This option is to save memory during 3dDeconvolve, in the case", "            where the user has requested both the fitts and errts datasets.", "", "            Normally 3dDeconvolve is used to compute both the fitts and errts", "            time series.  But if memory gets tight, it is worth noting that", "            these datasets are redundant, one can be computed from the other", "            (given the all_runs dataset).", "", "                all_runs = fitts + errts", "", "            Using -regress_compute_fitts, -fitts is no longer applied in 3dD", "            (though -errts is).  Instead, note that an all_runs dataset is", "            created just after 3dDeconvolve.  After that step, the script will", "            create fitts as (all_runs-errts) using 3dcalc.", "", "            Note that computation of both errts and fitts datasets is required", "            for this option to be applied.", "", "            See also -regress_est_blur_errts, -regress_errts_prefix,", "            -regress_fitts_prefix and -regress_no_fitts.", "", "        -regress_cormat_warnings Y/N : specify whether to get cormat warnings", "", "                e.g. -mask_cormat_warnings No", "                default: Yes", "", "            By default, '1d_tool.py -show_cormat_warnings' is run on the", "            regression matrix.  Any large, pairwise correlations are shown", "            in text output (which is also saved to a text file).", "", "            This option allows one to disable such functionality.", "", "            Please see '1d_tool.py -help' for more details.", "", "        -regress_est_blur_epits      : estimate the smoothness of the EPI data", "", "            This option specifies to run 3dFWHMx on each of the EPI datasets", "            used for regression, the results of which are averaged.  These blur", "            values are saved to the file blur_est.$subj.1D, along with any", "            similar output from errts.", "", "            These blur estimates may be input to AlphaSim, for any multiple", "            testing correction done for this subject.  If AlphaSim is run at", "            the group level, it is reasonable to average these estimates", "            across all subjects (assuming they were scanned with the same", "            protocol and at the same scanner).", "", "            The mask block is required for this operation (without which the", "            estimates are not reliable).", "", "            Please see '3dFWHMx -help' for more information.", "            See also -regress_est_blur_errts.", "", "        -regress_est_blur_errts      : estimate the smoothness of the errts", "", "    "], "params": [{"param_range": [1000, 1021], "help_range": [992, 2042]}, {"param_range": [2052, 2075], "help_range": [2044, 3229]}, {"param_range": [3239, 3258], "help_range": [3231, 3409]}, {"param_range": [3422, 3432], "help_range": [3410, 3485]}, {"param_range": [3498, 3505], "help_range": [3486, 3791]}, {"param_range": [3801, 3824], "help_range": [3827, 4810]}, {"param_range": [4820, 4848], "help_range": [4857, 5432]}, {"param_range": [5442, 5464], "help_range": [5473, 6519]}, {"param_range": [6529, 6553], "help_range": [6521, 7016]}], "previous": "afni_proc.py_part33.json", "next": "afni_proc.py_part35.json"}