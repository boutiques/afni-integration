{"helptext": ["ply the", "           despike and ricor processing blocks.  Note that '-do_block' is used", "           to add non-default blocks into their default positions.  Here the", "           'despike' and 'ricor' processing blocks would come before 'tshift'.", "", "           Remove 3 TRs from the ricor regressors to match the EPI data.  Also,", "           since degrees of freedom are not such a worry, regress the motion", "           parameters per-run (each run gets a separate set of 6 regressors).", "", "           The regression will use 81 basic regressors (all of \"no interest\"),", "           with 13 retroicor regressors being removed during pre-processing:", "", "                 27 baseline  regressors ( 3 per run * 9 runs)", "                 54 motion    regressors ( 6 per run * 9 runs)", "", "           To example #3, add -do_block, -ricor_* and -regress_motion_per_run.", "", "                afni_proc.py -subj_id sb23.e5a.ricor            \\", "                        -dsets sb23/epi_r??+orig.HEAD           \\", "                        -do_block despike ricor                 \\", "                        -tcat_remove_first_trs 3                \\", "                        -ricor_regs_nfirst 3                    \\", "                        -ricor_regs sb23/RICOR/r*.slibase.1D    \\", "                        -regress_motion_per_run", "", "           If tshift, blurring and masking are not desired, consider replacing", "           the -do_block option with an explicit list of blocks:", "", "                -blocks despike ricor volreg regress", "", "        Example 5b. RETROICOR, while running a normal regression. ~2~", "", "           Add the ricor regressors to a normal regression-based processing", "           stream.  Apply the RETROICOR regressors across runs (so using 13", "           concatenated regressors, not 13*9).  Note that concatenation is", "           normally done with the motion regressors too.", "", "           To example #3, add -do_block and three -ricor options.", "", "                afni_proc.py -subj_id sb23.e5b.ricor                       \\", "                        -dsets sb23/epi_r??+orig.HEAD                      \\", "                        -do_block despike ricor                            \\", "                        -copy_anat sb23/sb23_mpra+orig                     \\", "                        -tcat_remove_first_trs 3                           \\", "                        -ricor_regs_nfirst 3                               \\", "                        -ricor_regs sb23/RICOR/r*.slibase.1D               \\", "                        -ricor_regress_method 'across-runs'                \\", "                        -volreg_align_to last                              \\", "                        -regress_stim_times sb23/stim_files/blk_times.*.1D \\", "                        -regress_stim_labels tneg tpos tneu eneg epos      \\", "                                             eneu fneg fpos fneu           \\", "                        -regress_basis 'BLOCK(30,1)'                       \\", "                        -regress_est_blur_epits                            \\", "                        -regress_est_blur_errts", "", "           Also consider adding -regress_bandpass.", "", "        Example 5c. RETROICOR (modern): censor and band pass. ~2~", "", "           This is an example of how we might currently suggest analyzing", "           resting state data.  If no RICOR regressors exist, see example 9", "           (or just remove any ricor options).", "", "           Censoring due to motion has long been considered appropriate in", "           BOLD FMRI analysis, but is less common for those doing bandpass", "           filtering in RS FMRI because the FFT requires one to either break", "           the time axis (evil) or to replace the censored data with something", "           probably inappropriate.", "", "           Instead, it is slow (no FFT, but maybe SFT :) but effective to", "           regress frequencies within the regression model, where censoring", "           is simple.", "", "           Note: band passing in the face of RETROICOR is questionable.  It may", "                 be questionable in general.  To skip bandpassing, remove the", "                 -regress_bandpass option line.", "", "           Also, align EPI to anat and warp to standard space.", "", "                afni_proc.py -subj_id sb23.e5a.ricor            \\", "                        -dsets sb23/epi_r??+orig.HEAD           \\", "                        -blocks despike ricor tshift align tlrc \\", "                                volreg blur mask regress        \\", "                        -copy_anat sb23/sb23_mpra+orig          \\", "                        -tcat_remove_first_trs 3                \\", "                        -ricor_regs_nfirst 3                    \\", "                        -ricor_regs sb23/RICOR/r*.slibase.1D    \\", "                        -volreg_align_e2a                       \\", "                        -volreg_tlrc_warp                       \\", "                        -blur_size 6                            \\", "                        -regress_motion_per_run                 \\", "                        -regress_censor_motion 0.2              \\", "                        -regress_bandpass 0.01 0.1              \\", "                        -regress_apply_mot_types demean deriv   \\", "                        -regress_run_clustsim no                \\", "                        -regress_est_blur_epits                 \\", "                        -regress_est_blur_errts", "", "        Example 6. A modern example.  GOOD TO CONSIDER. ~2~", "", "           Align the EPI to the anatomy.  Also, process in MNI space, using", "           the 2009c non-linear template.", "", "           For alignment in either direction, add the 'align' block, which", "           aligns the anatomy to the EPI.  To then align the EPI to the anat", "           using the lpc+ZZ cost function (instead of just lpc), apply", "           -volreg_align_e2a, where that transform (inverse) is applied along", "           with the motion alignment.", "", "           On top of that, complete the processing in standard space by running", "           @auto_tlrc on the anat (via the 'tlrc' block) and applying the same", "           transformation to the EPI via -volreg_tlrc_warp.  Again, the EPI", "           transformation is applied along with the motion alignment, using", "           t"], "params": [{"param_range": [1000, 1009], "help_range": [976, 1107]}, {"param_range": [1132, 1143], "help_range": [1108, 1173]}, {"param_range": [1198, 1209], "help_range": [1174, 1987]}, {"param_range": [2012, 2018], "help_range": [-3237, -3161]}, {"param_range": [2089, 2098], "help_range": [2065, 2295]}, {"param_range": [2320, 2331], "help_range": [2296, 2372]}, {"param_range": [2397, 2408], "help_range": [2373, 2603]}, {"param_range": [2628, 2647], "help_range": [-3083, -3007]}, {"param_range": [2705, 2725], "help_range": [2681, 4206]}, {"param_range": [4231, 4237], "help_range": [4207, 4536]}, {"param_range": [4561, 4572], "help_range": [1108, 1173]}, {"param_range": [4627, 4638], "help_range": [4603, 5064]}, {"param_range": [5089, 5113], "help_range": [5065, 5130]}], "previous": "afni_proc.py_part2.json", "next": "afni_proc.py_part4.json"}