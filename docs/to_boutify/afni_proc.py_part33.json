{"helptext": ["         TRs, suitable for use with the -CENSORTR option in 3dDeconvolve.", "            The -censor option is the one applied however, so this file is not", "            used, but may be preferable for users to have a quick peek at.", "", "            motion_$subj_enorm.1D is the time series that the LIMIT is applied", "            to in deciding which TRs to censor.  It is the Euclidean norm of", "            the derivatives of the motion parameters.  Plotting this will give", "            users a visual indication of why TRs were censored.", "", "            By default, the TR prior to the large motion derivative will also", "            be censored.  To turn off that behavior, use -regress_censor_prev", "            with parameter 'no'.", "", "            If censoring the first few TRs from each run is also necessary,", "            use -regress_censor_first_trs.", "", "            Please see '1d_tool.py -help' for information on censoring motion.", "            See also -regress_censor_prev and -regress_censor_first_trs.", "", "        -regress_censor_first_trs N  : censor the first N TRs in each run", "", "                e.g.     -regress_censor_first_trs 3", "                default: N = 0", "", "            If, for example, censoring the first 3 TRs per run is desired, a", "            user might add \"-CENSORTR '*:0-2'\" to the -regress_opts_3dD option.", "            However, when using -regress_censor_motion, these censoring options", "            must be combined into one for 3dDeconvolve.", "", "            The -regress_censor_first_trs censors those TRs along with any with", "            large motion.", "", "            See '-censor_first_trs' under '1d_tool.py -help' for details.", "            See also '-regress_censor_motion'.", "", "        -regress_censor_prev yes/no  : censor TRs preceding large motion", "", "                default: -regress_censor_prev yes", "", "            Since motion spans two TRs, the derivative is not quite enough", "            information to decide whether it is more appropriate to censor", "            the earlier or later TR.  To error on the safe side, many users", "            choose to censor both.", "", "            Use this option to specify whether to include the previous TR", "            when censoring.", "", "            By default this option is applied as 'yes'.  Users may elect not", "            not to censor the previous TRs by setting this to 'no'.", "", "            See also -regress_censor_motion.", "", "        -regress_censor_outliers LIMIT : censor TRs with excessive outliers", "", "                e.g. -regress_censor_outliers 0.15", "", "            This option is used to censor TRs where too many voxels are flagged", "            as outliers by 3dToutcount.  LIMIT should be in [0.0, 1.0], as it", "            is a limit on the fraction of masked voxels.", "", "            '3dToutcount -automask -fraction' is used to output the fraction of", "            (auto)masked voxels that are considered outliers at each TR.  If", "            the fraction of outlier voxels is greater than LIMIT for some TR,", "            that TR is censored out.", "", "            Depending on the scanner settings, early TRs might have somewhat", "            higher intensities.  This could lead to the first few TRs of each", "            run being censored.  To avoid censoring the first few TRs of each", "            run, apply the -regress_skip_first_outliers option.", "", "            Note that if motion is also being censored, the multiple censor", "            files will be combined (multiplied) before 3dDeconvolve.", "", "            See '3dToutcount -help' for more details.", "            See also -regress_skip_first_outliers, -regress_censor_motion.", "", "        -regress_compute_gcor yes/no : compute GCOR from unit errts", "", "                e.g. -regress_compute_gcor no", "                default: yes", "", "            By default, the global correlation (GCOR) is computed from the", "            masked residual time series (errts).", "", "            GCOR can be thought of as the result of:", "                A1. compute the correlations of each voxel with every other", "                    --> can be viewed as an NMASK x NMASK correlation matrix", "                A2. compute GCOR: the average of the NMASK^2 values", "", "            Since step A1 would take a lot of time and disk space, a more", "            efficient computation is desirable:", "                B0. compute USET: scale each voxel time series to unit length", "                B1. compute GMU: the global mean of this unit dataset", "                B2. compute a correlation volume (of each time series with GMU)", "                B3. compute the average of this volume", "", "            The actual computation is simplified even further, as steps B2 and", "            B3 combine as the L2 norm of GMU.  The result is:", "                B2'. length(GMU)^2  (or the sum of squares of GMU)", "", "            The steps B0, B1 and B2' are performed in the proc script.", "", "            Note: This measure of global correlation is a single number in the", "                  range [0, 1] (not in [-1, 1] as some might expect).", "", "            Note: computation of GCOR requires a residual dataset, an EPI mask,", "                  and a volume analysis (no surface at the moment).", "", "        -regress_compute_tsnr yes/no : compute TSNR datasets from errts", "", "                e.g. -regress_compute_tsnr no", "                default: yes", "", "            By default, a temporal signal to noise (TSNR) dataset is created at", "            the end of the regress block.  The \"signal\" is the all_runs dataset", "            (input to 3dDeconvolve), and the \"noise\" is the errts dataset (the", "            residuals from 3dDeconvolve).  TSNR is computed (per voxel) as the", "            mean signal divided by the standard deviation of the noise.", "", "               TSNR = average(signal) / stdev(noise)", "", "            The main difference between the TSNR datasets from the volreg and", "            regress blocks is that the data in the regress block has been", "            smoothed and \"completely\" detrended (detrended according to the", "            regression model: including polort, motion and stim responses).", "", "            Use this option to prevent the TSNR dataset computation in the", "            'regress' block.", "", "            See also -volreg_compute_tsnr.", "", "        -regress_fout yes/no         : output F-stat sub-bricks", "", "                e.g. -regress_fout no", "                default: yes", "", "            This option controls whether to apply -fout in 3dDeconvolve.  The", "            default is yes.", "", "        -regress_make_cbucket yes/no : add a -cbucket option to 3dDeconvolve", "", "                default: 'no'", "", "            Recall that the -bucket dataset (no 'c') contains beta weights and", "            various statistics, but generally not including baseline terms", "            (polort and motion).", "", "            The -cbucket dataset (with a 'c') is a little different in that it", "            contains:", "                - ONLY betas (no t-stats, no F-stats, no contrasts)", "                - ALL betas (including baseline terms)", "            So it has one volume (beta) per regressor in the X-matrix.", "", "            The use is generally for 3dSynthesize, to recreate time series", "            datasets akin to the fitts, but where the user can request any set", "            of parameters to be included (for example, the polort and the main", "            2 regressors of interest).", "", "            Setting this to 'yes' will result in the -cbucket option being", "            added to the 3dDeconvolve command.", "", "            Please "], "params": [{"param_range": [1000, 1025], "help_range": [1031, 1673]}, {"param_range": [1683, 1703], "help_range": [1675, 2355]}, {"param_range": [2365, 2389], "help_range": [2398, 3547]}, {"param_range": [3557, 3578], "help_range": [3549, 5078]}, {"param_range": [5088, 5109], "help_range": [5080, 6126]}, {"param_range": [6136, 6149], "help_range": [6128, 6366]}], "previous": "afni_proc.py_part32.json", "next": "afni_proc.py_part34.json"}