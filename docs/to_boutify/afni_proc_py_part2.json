{"helptext": ["s_basis)", "                  - compute the baseline polynomial degree, based on run length", "                        (e.g. option: -regress_polort 2)", "                  - do not censor large motion", "                  - output fit time series", "                  - output ideal curves for GAM/BLOCK regressors", "                  - output iresp curves for non-GAM/non-BLOCK regressors", "", "        empty:    - do nothing (just copy the data using 3dTcat)", "", "", "    ==================================================", "    EXAMPLES (options can be provided in any order): ~1~", "", "        Example 1. Minimum use. ~2~", "", "           Provide datasets and stim files (or stim_times files).  Note that a", "           dataset suffix (e.g. HEAD) must be used with wildcards, so that", "           datasets are not applied twice.  In this case, a stim_file with many", "           columns is given, where the script to changes it to stim_times files.", "", "                afni_proc.py -dsets epiRT*.HEAD              \\", "                             -regress_stim_files stims.1D", "", "           or without any wildcard, the .HEAD suffix is not needed:", "", "                afni_proc.py -dsets epiRT_r1+orig epiRT_r2+orig epiRT_r3+orig \\", "                             -regress_stim_files stims.1D", "", "     **************************************************************", "     *  New and improved!  Examples that apply to AFNI_data4.     *", "     *  (were quickly OLD and OBSOLETE, as we now use AFNI_data6) *", "     **************************************************************", "", "        The following examples can be run from the AFNI_data4 directory, and", "        are examples of how one might process the data for subject sb23.", "", "        Example 2. Very simple. ~2~", "", "        Use all defaults, except remove 3 TRs and use basis", "        function BLOCK(30,1).  The default basis function is GAM.", "", "                afni_proc.py -subj_id sb23.e2.simple                       \\", "                        -dsets sb23/epi_r??+orig.HEAD                      \\", "                        -tcat_remove_first_trs 3                           \\", "                        -regress_stim_times sb23/stim_files/blk_times.*.1D \\", "                        -regress_basis 'BLOCK(30,1)'", "", "        Example 3. (no longer) The current class example.  ~2~", "", "           Copy the anatomy into the results directory, register EPI data to", "           the last TR, specify stimulus labels, compute blur estimates, and", "           provide GLT options directly to 3dDeconvolve.  The GLTs will be", "           ignored after this, as they take up too many lines.", "", "                afni_proc.py -subj_id sb23.blk                             \\", "                        -dsets sb23/epi_r??+orig.HEAD                      \\", "                        -copy_anat sb23/sb23_mpra+orig                     \\", "                        -tcat_remove_first_trs 3                           \\", "                        -volreg_align_to last                              \\", "                        -regress_stim_times sb23/stim_files/blk_times.*.1D \\", "                        -regress_stim_labels tneg tpos tneu eneg epos      \\", "                                             eneu fneg fpos fneu           \\", "                        -regress_basis 'BLOCK(30,1)'                       \\", "                        -regress_opts_3dD                                  \\", "                            -gltsym 'SYM: +eneg -fneg'                     \\", "                            -glt_label 1 eneg_vs_fneg                      \\", "                            -gltsym 'SYM: 0.5*fneg 0.5*fpos -1.0*fneu'     \\", "                            -glt_label 2 face_contrast                     \\", "                            -gltsym 'SYM: tpos epos fpos -tneg -eneg -fneg'\\", "                            -glt_label 3 pos_vs_neg                        \\", "                        -regress_est_blur_epits                            \\", "                        -regress_est_blur_errts", "", "        Example 4. Similar to 3, but specify the processing blocks. ~2~", "", "           Adding despike and tlrc, and removing tshift.  Note that", "           the tlrc block is to run @auto_tlrc on the anat.  Ignore the GLTs.", "", "                afni_proc.py -subj_id sb23.e4.blocks                       \\", "                        -dsets sb23/epi_r??+orig.HEAD                      \\", "                        -blocks despike volreg blur mask scale regress tlrc\\", "                        -copy_anat sb23/sb23_mpra+orig                     \\", "                        -tcat_remove_first_trs 3                           \\", "                        -regress_stim_times sb23/stim_files/blk_times.*.1D \\", "                        -regress_stim_labels tneg tpos tneu eneg epos      \\", "                                             eneu fneg fpos fneu           \\", "                        -regress_basis 'BLOCK(30,1)'                       \\", "                        -regress_est_blur_epits                            \\", "                        -regress_est_blur_errts", "", "        Example 5a. RETROICOR, resting state data. ~2~", "", "           Assuming the class data is for resting-state and that we have the", "           appropriate slice-based regressors from RetroTS.py, apply the", "           despike and ricor processing blocks.  Note that '-do_block' is used", "           to add non-default blocks into their default positions.  Here the", "           'despike' and 'ricor' processing blocks would come before 'tshift'.", "", "           Remove 3 TRs from the ricor regressors to match the EPI data.  Also,", "           since degrees of freedom are not such a worry, regress the motion", "           parameters per-run (each run gets a separate set of 6 regressors).", "", "           The regression will use 81 basic regressors (all of \"no interest\"),", "           with 13 retroicor regressors being removed during pre-processing:", "", "                 27 baseline  regressors ( 3 per run * 9 runs)", "                 54 motion    regressors ( 6 per run * 9 runs)", "", "           To example #3, add -do_block, -ricor_* and -regress_motion_per_run.", "", "                afni_proc.py -subj_id sb23.e5a.ricor            \\", "                        -dsets sb23/epi_r??+orig.HEAD           \\", "                        -do_block despike ricor                 \\", "                        -tcat_remove_first_trs 3                \\", "                        -ricor_regs_nfirst 3                    \\", "                        -ricor_regs sb23/RICOR/r*.slibase.1D    \\", "                        -regress_motion_per_run", "", "           If tshift, blurring and masking are not desired, consider replacing", "           the -do_block option with an explicit list of blocks:", "", "                -blocks despike ricor volreg regress", "", "        Example 5b. RETROICOR, while running a normal regression. ~2~", "", "           Add the ricor regressors to a normal regression-based processing", "           stream.  Apply the RETROICOR regressors across runs (so using 13", "           concatenated regressors, not 13*9).  Note that concatenation is", "           normally done with the motion regressors too.", "", "           To example #3, add -do_block and three -ricor options.", "", "                afni_proc.py -subj_id sb23.e5b.ricor                       \\", "            "], "params": [{"param_range": [1000, 1019], "help_range": [971, 1178]}, {"param_range": [1208, 1227], "help_range": [1179, 1902]}, {"param_range": [1927, 1933], "help_range": [1903, 2056]}, {"param_range": [2081, 2100], "help_range": [2057, 2621]}, {"param_range": [2646, 2652], "help_range": [2622, 2929]}, {"param_range": [2954, 2973], "help_range": [2057, 2133]}, {"param_range": [3031, 3051], "help_range": [3007, 3237]}, {"param_range": [3262, 3279], "help_range": [3238, 4199]}, {"param_range": [4224, 4230], "help_range": [4200, 4507]}, {"param_range": [4532, 4551], "help_range": [2057, 2133]}, {"param_range": [4609, 4629], "help_range": [4585, 6049]}, {"param_range": [6074, 6080], "help_range": [6050, 6115]}], "previous": "afni_proc.py_part1.json", "next": "afni_proc.py_part3.json"}