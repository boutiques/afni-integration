{"helptext": [" smoothing program).  It is applied", "            as the 'bmm' parameter in the filter option (such as -1blur_fwhm)", "            in 3dmerge.", "", "            Note the relationship between blur sizes, as used in 3dmerge:", "", "                sigma = 0.57735027 * rms = 0.42466090 * fwhm", "                (implying fwhm = 1.359556 * rms)", "", "            Programs 3dmerge and 3dBlurInMask apply -blur_size as an additional", "            gaussian blur.  Therefore smoothing estimates should be computed", "            per subject for the correction for multiple comparisons.", "", "            Programs 3dBlurToFWHM and SurfSmooth apply -blur_size as the", "            resulting blur, and so do not requre blur estimation.", "", "            Please see '3dmerge -help'      for more information.", "            Please see '3dBlurInMask -help' for more information.", "            Please see '3dBlurToFWHM -help' for more information.", "            Please see 'SurfSmooth -help'   for more information.", "            See also -blur_filter.", "", "        -blur_to_fwhm           : blur TO the blur size (not add a blur size)", "", "            This option changes the program used to blur the data.  Instead of", "            using 3dmerge, this applies 3dBlurToFWHM.  So instead of adding a", "            blur of size -blur_size (with 3dmerge), the data is blurred TO the", "            FWHM of the -blur_size.", "", "            Note that 3dBlurToFWHM should be run with a mask.  So either:", "                o  put the 'mask' block before the 'blur' block, or", "                o  use -blur_in_automask", "            It is not appropriate to include non-brain in the blur estimate.", "", "            Note that extra options can be added via -blur_opts_B2FW.", "", "            Please see '3dBlurToFWHM -help' for more information.", "            See also -blur_size, -blur_in_automask, -blur_opts_B2FW.", "", "        -blur_opts_B2FW OPTS ... : specify extra options for 3dBlurToFWHM", "", "                e.g. -blur_opts_B2FW -rate 0.2 -temper", "", "            This allows the user to add extra options to the 3dBlurToFWHM", "            command.  Note that only one -blur_opts_B2FW should be applied,", "            which may be used for multiple 3dBlurToFWHM options.", "", "            Please see '3dBlurToFWHM -help' for more information.", "", "        -mask_apply TYPE        : specify which mask to apply in regression", "", "                e.g. -mask_apply group", "", "            If possible, masks will be made for the EPI data, the subject", "            anatomy, the group anatomy and EPI warp extents.  This option is", "            used to specify which of those masks to apply to the regression.", "", "            Valid choices: epi, anat, group, extents.", "", "            A subject 'anat' mask will be created if the EPI anat anatomy are", "            aligned, or if the EPI data is warped to standard space via the", "            anat transformation.  In any case, a skull-stripped anat will exist.", "", "            A 'group' anat mask will be created if the 'tlrc' block is used", "            (via the -blocks or -tlrc_anat options).  In such a case, the anat", "            template will be made into a binary mask.", "", "            This option makes -regress_apply_mask obsolete.", "", "            See \"MASKING NOTE\" and \"DEFAULTS\" for details.", "            See also -blocks.", "", "        -mask_dilate NUM_VOXELS : specify the automask dilation", "", "                e.g. -mask_dilate 3", "                default: 1", "", "            By default, the masks generated from the EPI data are dilated by", "            1 step (voxel), via the -dilate option in 3dAutomask.  With this", "            option, the user may specify the dilation.  Valid integers must", "            be at least zero.", "", "            Note that 3dAutomask dilation is a little different from the", "            natural voxel-neighbor dilation.", "", "            Please see '3dAutomask -help' for more information.", "            See also -mask_type.", "", "        -mask_epi_anat yes/no : apply epi_anat mask in place of EPI mask", "", "                e.g. -mask_epi_anat yes", "", "            An EPI mask might be applied to the data either for simple", "            computations (e.g. global brain correlation, GCOR), or actually", "            applied to the EPI data.  The EPI mask $full_mask is used for most", "            such computations, by default.", "", "            The mask_epi_anat dataset is an intersection of full_mask and", "            mask_anat, and might be better suited to such computations.", "", "            Use this option to apply mask_epi_anat in place of full_mask.", "", "        -mask_import LABEL MSET : import a final grid mask with the given label", "", "                e.g. -mask_import Tvent template_ventricle_3mm+tlrc", "", "            Use this option to import a mask that is aligned with the final", "            EPI data _and_ is on the final grid.", "", "                o  this might be based on the group template", "                o  this should already be resampled appropriately", "                o  no warping or resampling will be done to this dataset", "", "            This mask can be applied via LABEL as other masks, using options", "            like: -regress_ROI, -regress_ROI_PC, -regress_make_corr_vols,", "                  -regress_anaticor_label, -mask_intersect, -mask_union.", "", "            For example, one might import a ventricle mask from the template,", "            intersect it with the subject specific CSFe (eroded CSF) mask,", "            and possibly take the union with WMe (eroded white matter), before", "            using the result for principle component regression, as in:", "", "                -mask_import Tvent template_ventricle_3mm+tlrc \\", "                -mask_intersect Svent CSFe Tvent               \\", "                -mask_union WM_vent Svent WMe                  \\", "                -regress_ROI_PC WM_vent 3                      \\", "", "            See also -regress_ROI, -regress_ROI_PC, -regress_make_corr_vols,", "                     -regress_anaticor_label, -mask_intersect, -mask_union.", "", "        -mask_intersect NEW_LABEL MASK_A MASK_B : intersect 2 masks", "", "                e.g. -mask_intersect Svent CSFe Tvent", "", "            Use this option to intersect 2 known masks to create a new mask.", "            NEW_LABEL will be the label of the result, while MASK_A and MASK_B", "            should be labels for existing masks.", "", "            One could use this to intersect a template ventricle mask with each", "            subject's specific CSFe (eroded CSF) mask from 3dSeg, for example.", "", "            See -mask_import for more details.", "", "        -mask_union NEW_LABEL MASK_A MASK_B : take union of 2 masks", "", "                e.g. -mask_union WM_vent Svent WMe", "", "            Use this option to take the union of 2 known masks to create a new", "            mask.  NEW_LABEL will be the label of the result, while MASK_A and", "            MASK_B should be labels for existing masks.", "", "            One could use this to create union of CSFe and WMe for principle", "            component regression, for example.", "", "            See -mask_import for more details.", "", "        -mask_rm_segsy Y/N  : choose whether to delete the Segsy directory", "", "                e.g. -mask_rm_segsy no", "                default: yes", "", "            This option is a companion to -mask_segment_anat.", "", "            In the case of running 3dSeg to segment the anatomy, a resulting", "            Segsy directory is created.  Since the main result is a Classes", "            dataset, and to save disk space, the Segsy directory is removed", "            by default.  Use this option to preserve it.", "", "    "], "params": [{"param_range": [1000, 1013], "help_range": [1026, 1810]}, {"param_range": [1820, 1835], "help_range": [1812, 2224]}, {"param_range": [2234, 2245], "help_range": [2260, 3222]}, {"param_range": [3232, 3244], "help_range": [3258, 3829]}, {"param_range": [3839, 3853], "help_range": [3831, 4436]}, {"param_range": [4446, 4458], "help_range": [4472, 5639]}, {"param_range": [5656, 5668], "help_range": [5640, 5858]}, {"param_range": [5868, 5883], "help_range": [5910, 6396]}], "previous": "afni_proc.py_part27.json", "next": "afni_proc.py_part29.json"}