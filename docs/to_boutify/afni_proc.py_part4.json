{"helptext": ["  afni_proc.py -subj_id sb23.e5a.ricor            \\", "                        -dsets sb23/epi_r??+orig.HEAD           \\", "                        -blocks despike ricor tshift align tlrc \\", "                                volreg blur mask regress        \\", "                        -copy_anat sb23/sb23_mpra+orig          \\", "                        -tcat_remove_first_trs 3                \\", "                        -ricor_regs_nfirst 3                    \\", "                        -ricor_regs sb23/RICOR/r*.slibase.1D    \\", "                        -volreg_align_e2a                       \\", "                        -volreg_tlrc_warp                       \\", "                        -blur_size 6                            \\", "                        -regress_motion_per_run                 \\", "                        -regress_censor_motion 0.2              \\", "                        -regress_bandpass 0.01 0.1              \\", "                        -regress_apply_mot_types demean deriv   \\", "                        -regress_run_clustsim no                \\", "                        -regress_est_blur_epits                 \\", "                        -regress_est_blur_errts", "", "        Example 6. A modern example.  GOOD TO CONSIDER. ~2~", "", "           Align the EPI to the anatomy.  Also, process in MNI space, using", "           the 2009c non-linear template.", "", "           For alignment in either direction, add the 'align' block, which", "           aligns the anatomy to the EPI.  To then align the EPI to the anat", "           using the lpc+ZZ cost function (instead of just lpc), apply", "           -volreg_align_e2a, where that transform (inverse) is applied along", "           with the motion alignment.", "", "           On top of that, complete the processing in standard space by running", "           @auto_tlrc on the anat (via the 'tlrc' block) and applying the same", "           transformation to the EPI via -volreg_tlrc_warp.  Again, the EPI", "           transformation is applied along with the motion alignment, using", "           the volume with the minimum outlier fraction as the alignment base", "           (option '-volreg_align_to MIN_OUTLIER').", "", "           So use the given -blocks option, plus 2 extra volreg warps to #3 via", "           '-volreg_align_e2a', '-volreg_tlrc_warp'.", "", "           As an added bonus, censor TR pairs where the Euclidean Norm of the", "           motion derivative exceeds 0.3.  Also, regress motion parameters", "           separately for each run.", "", "                afni_proc.py -subj_id sb23.e6.align                        \\", "                        -copy_anat sb23/sb23_mpra+orig                     \\", "                        -dsets sb23/epi_r??+orig.HEAD                      \\", "                        -blocks tshift align tlrc volreg blur mask         \\", "                                scale regress                              \\", "                        -tcat_remove_first_trs 3                           \\", "                        -align_opts_aea -cost lpc+ZZ                       \\", "                        -tlrc_base MNI152_T1_2009c+tlrc                    \\", "                        -volreg_align_to MIN_OUTLIER                       \\", "                        -volreg_align_e2a                                  \\", "                        -volreg_tlrc_warp                                  \\", "                        -regress_stim_times sb23/stim_files/blk_times.*.1D \\", "                        -regress_stim_labels tneg tpos tneu eneg epos      \\", "                                             eneu fneg fpos fneu           \\", "                        -regress_basis 'BLOCK(30,1)'                       \\", "                        -regress_motion_per_run                            \\", "                        -regress_censor_motion 0.3                         \\", "                        -regress_reml_exec                                 \\", "                        -regress_opts_3dD                                  \\", "                            -gltsym 'SYM: +eneg -fneg'                     \\", "                            -glt_label 1 eneg_vs_fneg                      \\", "                        -regress_est_blur_epits                            \\", "                        -regress_est_blur_errts", "", "           To process in orig space, remove -volreg_tlrc_warp.", "           To apply manual tlrc transformation, use -volreg_tlrc_adwarp.", "           To process as anat aligned to EPI, remove -volreg_align_e2a.", "", "         * Also, one can use ANATICOR with task (-regress_anaticor_fast, say)", "           in the case of -reml_exec.", "", "        Example 7. Similar to 6, but get a little more esoteric. ~2~", "", "           a. Register EPI volumes to the one which has the minimum outlier", "              fraction (so hopefully the least motion), still with cost lpc+ZZ.", "", "           b. Blur only within the brain, as far as an automask can tell.  So", "              add -blur_in_automask to blur only within an automatic mask", "              created internally by 3dBlurInMask (akin to 3dAutomask).", "", "           c. Let the basis functions vary.  For some reason, we expect the", "              BOLD responses to the telephone classes to vary across the brain.", "              So we have decided to use TENT functions there.  Since the TR is", "              3.0s and we might expect up to a 45 second BOLD response curve,", "              use 'TENT(0,45,16)' for those first 3 out of 9 basis functions.", "", "              This means using -regress_basis_multi instead of -regress_basis,", "              and specifying all 9 basis functions appropriately.", "", "           d. Use amplitude modulation.", "", "              We expect responses to email stimuli to vary proportionally with", "              the number of punctuation characters used in the message (in", "              certain brain regions).  So we will use those values as auxiliary", "              parameters 3dDeconvolve by marrying the parameters to the stim", "              times (using 1dMarry).", "", "              Use -regress_stim_types to specify that the epos/eneg/eneu stim", "              classes should be passed to 3dDeconvolve using -stim_times_AM2.", "", "           e. Not only censor motion, but censor TRs when more than 10% of the", "              automasked brain are outliers.  So add -regress_censor_outliers.", "", "           f. Include both de-meaned and derivatives of motion parameters in", "              the regression.  So add '-regress_apply_mot_types demean deriv'.", "", "           g. Output baseline parameters so we can see the effect of motion.", "              So add -bout under option -regress_opts_3dD.", "", "           h. Save on RAM by computing the fitts only after 3dDeconvolve.", "              So add -regress_compute_fitts.", "", "           i. Speed things up.  Have 3dDeconvolve use 4 CPUs and skip the", "              single subject 3dClustSim execution.  So add '-jobs 4' to the", "              -regress_opts_3dD option and add '-regress_run_clustsim no'.", "", "                afni_proc.py -subj_id sb23.e7.esoteric                     \\", "                        -dsets sb23/epi_r??+orig.HEAD                      \\", "                        -blocks tshift align tlrc volreg blur mask         \\", "                                scale regress                              \\", "                        -copy_anat sb23/sb23_mpra+orig                     \\", "                        -tcat_remove_first_trs 3                           \\", "                        -align_opts_aea -cost lpc+ZZ                       \\", "                        -volreg_align_to MIN_OUTLIER                       \\", "                        -volreg_align_e2a                                  \\", "                        -volreg_tlrc_warp                                  \\", "                        -blur_in_automask                                  \\", "                        -regress_stim_times sb23/stim_files/blk_times.*.1D \\", "                        -regress_stim_types times times times              \\", "                                            AM2   AM2   AM2                \\", "                                            times times times              \\", "                        -regress_stim_labels tneg tpos tneu                \\", "                                             eneg epos eneu                \\", "                                             fneg fpos fneu                \\", "                        -regress_basis_multi                               \\", "                       "], "params": [{"param_range": [1000, 1021], "help_range": [976, 2596]}, {"param_range": [2621, 2627], "help_range": [2597, 2904]}, {"param_range": [2929, 2944], "help_range": [2905, 3289]}, {"param_range": [3314, 3333], "help_range": [-7238, -7162]}, {"param_range": [3391, 3411], "help_range": [3367, 3828]}, {"param_range": [3853, 3870], "help_range": [3829, 6770]}, {"param_range": [6785, 6802], "help_range": [6771, 6923]}, {"param_range": [6948, 6954], "help_range": [6924, 7308]}], "previous": "afni_proc.py_part3.json", "next": "afni_proc.py_part5.json"}