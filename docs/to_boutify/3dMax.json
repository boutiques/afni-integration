{
 "helptext": [
  "*****",
  "NOTE: 3dMax has been replaced by 3dBrickStat",
  "***** This script will run 3dBrickStat for",
  "      you to avoid breaking your code.",
  "      Please start using new name.",
  "Now Running: ",
  " 3dBrickStat -help ",
  " ",
  "Usage: 3dBrickStat [options] dataset",
  "Compute maximum and/or minimum voxel values of an input dataset",
  "",
  "The output is a number to the console.  The input dataset",
  "may use a sub-brick selection list, as in program 3dcalc.",
  "",
  "Note that this program computes ONE number as the output; e.g.,",
  "the mean over all voxels and time points.  If you want (say) the",
  "mean over all voxels but for each time point individually, see",
  "program 3dmaskave.",
  "",
  "Note: If you don't specify one sub-brick, the parameter you get",
  "----- back is computed from all the sub-bricks in dataset.",
  "Options :",
  "  -quick = get the information from the header only (default)",
  "  -slow = read the whole dataset to find the min and max values",
  "         all other options except min and max imply slow",
  "  -min = print the minimum value in dataset",
  "  -max = print the maximum value in dataset (default)",
  "  -mean = print the mean value in dataset ",
  "  -sum = print the sum of values in the dataset",
  "  -var = print the variance in the dataset ",
  "  -stdev = print the standard deviation in the dataset ",
  "           -stdev and -var are mutually exclusive",
  "  -count = print the number of voxels included",
  "  -volume = print the volume of voxels included in microliters",
  "  -positive = include only positive voxel values ",
  "  -negative = include only negative voxel values ",
  "  -zero = include only zero voxel values ",
  "  -non-positive = include only voxel values 0 or negative ",
  "  -non-negative = include only voxel values 0 or greater ",
  "  -non-zero = include only voxel values not equal to 0 ",
  "  -absolute = use absolute value of voxel values for all calculations",
  "              can be combined with restrictive non-positive, non-negative,",
  "              etc. even if not practical. Ignored for percentile and",
  "              median computations.",
  "  -nan = include only voxel values that are finite numbers, ",
  "         not NaN, or inf. -nan forces -slow mode.",
  "  -nonan =exclude voxel values that are not numbers",
  "  -mask dset = use dset as mask to include/exclude voxels",
  "  -mrange MIN MAX = Only accept values between MIN and MAX (inclusive)",
  "                    from the mask. Default it to accept all non-zero",
  "                    voxels.",
  "  -mvalue VAL = Only accept values equal to VAL from the mask.",
  "  -automask = automatically compute mask for dataset",
  "    Can not be combined with -mask",
  "  -percentile p0 ps p1 write the percentile values starting",
  "              at p0% and ending at p1% at a step of ps%",
  "              Output is of the form p% value   p% value ...",
  "              Percentile values are output first. ",
  "              Only one sub-brick is accepted as input with this option.",
  "              Write the author if you REALLY need this option",
  "              to work with multiple sub-bricks.",
  "  -median a shortcut for -percentile 50 1 50",
  "  -ver = print author and version info",
  "  -help = print this help screen",
  "",
  "INPUT DATASET NAMES",
  "-------------------",
  "This program accepts datasets that are modified on input according to the",
  "following schemes:",
  "  'r1+orig[3..5]'                                    {sub-brick selector}",
  "  'r1+orig<100..200>'                                {sub-range selector}",
  "  'r1+orig[3..5]<100..200>'                          {both selectors}",
  "  '3dcalc( -a r1+orig -b r2+orig -expr 0.5*(a+b) )'  {calculation}",
  "For the gruesome details, see the output of 'afni -help'.",
  "",
  "++ Compile date = May 25 2018 {AFNI_18.1.18:macosx_10.7_Intel_64}",
  "",
  "*****",
  "NOTE: 3dMax has been replaced by 3dBrickStat",
  "***** This script will run 3dBrickStat for",
  "      you to avoid breaking your code.",
  "      Please start using new name.",
  "Finished Running: ",
  " 3dBrickStat -help ",
  " "
 ],
 "params": [
  {
   "param_range": [
    770,
    776
   ],
   "help_range": [
    779,
    829
   ]
  },
  {
   "param_range": [
    832,
    837
   ],
   "help_range": [
    840,
    950
   ]
  },
  {
   "param_range": [
    953,
    957
   ],
   "help_range": [
    960,
    994
   ]
  },
  {
   "param_range": [
    997,
    1001
   ],
   "help_range": [
    1004,
    1048
   ]
  },
  {
   "param_range": [
    1051,
    1056
   ],
   "help_range": [
    1059,
    1090
   ]
  },
  {
   "param_range": [
    1094,
    1098
   ],
   "help_range": [
    1101,
    1139
   ]
  },
  {
   "param_range": [
    1142,
    1146
   ],
   "help_range": [
    1149,
    1182
   ]
  },
  {
   "param_range": [
    1186,
    1192
   ],
   "help_range": [
    1195,
    1289
   ]
  },
  {
   "param_range": [
    1292,
    1298
   ],
   "help_range": [
    1301,
    1336
   ]
  },
  {
   "param_range": [
    1339,
    1346
   ],
   "help_range": [
    1349,
    1399
   ]
  },
  {
   "param_range": [
    1402,
    1411
   ],
   "help_range": [
    1414,
    1448
   ]
  },
  {
   "param_range": [
    1452,
    1461
   ],
   "help_range": [
    1464,
    1498
   ]
  },
  {
   "param_range": [
    1502,
    1507
   ],
   "help_range": [
    1510,
    1540
   ]
  },
  {
   "param_range": [
    1544,
    1557
   ],
   "help_range": [
    1557,
    1599
   ]
  },
  {
   "param_range": [
    1603,
    1616
   ],
   "help_range": [
    1616,
    1657
   ]
  },
  {
   "param_range": [
    1661,
    1670
   ],
   "help_range": [
    1670,
    1713
   ]
  },
  {
   "param_range": [
    1717,
    1726
   ],
   "help_range": [
    1729,
    1963
   ]
  },
  {
   "param_range": [
    1966,
    1970
   ],
   "help_range": [
    1973,
    2074
   ]
  },
  {
   "param_range": [
    2077,
    2083
   ],
   "help_range": [
    2085,
    2126
   ]
  },
  {
   "param_range": [
    2129,
    2134
   ],
   "help_range": [
    2142,
    2184
   ]
  },
  {
   "param_range": [
    2187,
    2194
   ],
   "help_range": [
    2205,
    2352
   ]
  },
  {
   "param_range": [
    2355,
    2362
   ],
   "help_range": [
    2369,
    2415
   ]
  },
  {
   "param_range": [
    2418,
    2427
   ],
   "help_range": [
    2430,
    2503
   ]
  },
  {
   "param_range": [
    2506,
    2517
   ],
   "help_range": [
    2517,
    2912
   ]
  },
  {
   "param_range": [
    2915,
    2922
   ],
   "help_range": [
    2922,
    2957
   ]
  },
  {
   "param_range": [
    2960,
    2964
   ],
   "help_range": [
    2967,
    2996
   ]
  },
  {
   "param_range": [
    2999,
    3004
   ],
   "help_range": [
    3007,
    3780
   ]
  }
 ]
}