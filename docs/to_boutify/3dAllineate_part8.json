{"helptext": ["              'm' and 'a' (cf. source code in powell_int.c).", "                 The number of points used for approximating the", "                 cost functional is m*N+a, where N is the number", "                 of parameters being optimized.  The default values", "                 are m=2 and a=3.  Larger values will probably slow", "                 the program down for no good reason.  The smallest", "                 allowed values are 1.", " -target ttt   = Same as '-source ttt'.  In the earliest versions,", "                 what I now call the 'source' dataset was called the", "                 'target' dataset:", "                    Try to remember the kind of September (2006)", "                    When life was slow and oh so mellow", "                    Try to remember the kind of September", "                    When grass was green and source was target.", " -Xwarp       =} Change the warp/matrix setup so that only the x-, y-, or z-", " -Ywarp       =} axis is stretched & sheared.  Useful for EPI, where 'X',", " -Zwarp       =} 'Y', or 'Z' corresponds to the phase encoding direction.", " -FPS fps      = Generalizes -EPI to arbitrary permutation of directions.", " -histpow pp   = By default, the number of bins in the histogram used", "                 for calculating the Hellinger, Mutual Information, and", "                 Correlation Ratio statistics is n^(1/3), where n is", "                 the number of data points.  You can change that exponent", "                 to 'pp' with this option.", " -histbin nn   = Or you can just set the number of bins directly to 'nn'.", " -eqbin   nn   = Use equalized marginal histograms with 'nn' bins.", " -clbin   nn   = Use 'nn' equal-spaced bins except for the bot and top,", "                 which will be clipped (thus the 'cl').  If nn is 0, the", "                 program will pick the number of bins for you.", "                 **N.B.: '-clbin 0' is now the default [25 Jul 2007];", "                         if you want the old all-equal-spaced bins, use", "                         '-histbin 0'.", "                 **N.B.: '-clbin' only works when the datasets are", "                         non-negative; any negative voxels in either", "                         the input or source volumes will force a switch", "                         to all equal-spaced bins.", " -wtmrad  mm   = Set autoweight/mask median filter radius to 'mm' voxels.", " -wtgrad  gg   = Set autoweight/mask Gaussian filter radius to 'gg' voxels.", " -nmsetup nn   = Use 'nn' points for the setup matching [default=98756]", " -ignout       = Ignore voxels outside the warped source dataset.", "", " -blok bbb     = Blok definition for the 'lp?' (Local Pearson) cost", "                 functions: 'bbb' is one of", "                   'BALL(r)' or 'CUBE(r)' or 'RHDD(r)' or 'TOHD(r)'", "                 corresponding to", "                   spheres or cubes or rhombic dodecahedra or", "                   truncated octahedra", "                 where 'r' is the size parameter in mm.", "                 [Default is 'RHDD(6.54321)' (rhombic dodecahedron)]", "", " -allcost        = Compute ALL available cost functionals and print them", "                   at various points.", " -allcostX       = Compute and print ALL available cost functionals for the", "                   un-warped inputs, and then quit.", " -allcostX1D p q = Compute ALL available cost functionals for the set of", "                   parameters given in the 1D file 'p' (12 values per row),", "                   write them to the 1D file 'q', then exit. (For you, Zman)", "                  * N.B.: If -fineblur is used, that amount of smoothing", "                          will be applied prior to the -allcostX evaluations.", "                          The parameters are the rotation, shift, scale,", "                          and shear values, not the affine transformation", "                          matrix. An identity matrix could be provided as", "                          \"0 0 0  0 0 0  1 1 1  0 0 0\" for instance or by", "                          using the word \"IDENTITY\"", "", "===========================================================================", "", "Modifying '-final wsinc5'", "-------------------------", " * The windowed (tapered) sinc function interpolation can be modified", "     by several environment variables.  This is expert-level stuff, and", "     you should understand what you are doing if you use these options.", "     The simplest way to use these would be on the command line, as in", "       -DAFNI_WSINC5_RADIUS=9 -DAFNI_WSINC5_TAPERFUN=Hamming", "", " * AFNI_WSINC5_TAPERFUN lets you choose the taper function.", "     The default taper function is the minimum sidelobe 3-term cosine:", "       0.4243801 + 0.4973406*cos(PI*x) + 0.0782793*cos(2*PI*x)", "     If you set this environment variable to 'Hamming', then the", "     minimum sidelobe 2-term cosine will be used instead:", "       0.53836 + 0.46164*cos(PI*x)", "     Here, 'x' is between 0 and 1, where x=0 is the center of the", "     interpolation mask and x=1 is the outer edge.", " ++  Unfortunately, the 3-term cosine doesn't have a catchy name; you can", "       find it (and many other) taper functions described in the paper", "         AH Nuttall, Some Windows with Very Good Sidelobe Behavior.", "         IEEE Trans. ASSP, 29:84-91 (1981).", "       In particular, see Fig.14 and Eq.36 in this paper.", "", " * AFNI_WSINC5_TAPERCUT lets you choose the start 'x' point for tapering:", "     This value should be between 0 and 0.8; for example, 0 means to taper", "     all th"], "params": [{"param_range": [1000, 1006], "help_range": [1015, 1072]}, {"param_range": [1074, 1078], "help_range": [1090, 1146]}, {"param_range": [1148, 1156], "help_range": [1164, 1474]}, {"param_range": [1476, 1484], "help_range": [1492, 1548]}, {"param_range": [1550, 1556], "help_range": [1566, 1615]}, {"param_range": [1617, 1623], "help_range": [1633, 2264]}, {"param_range": [2266, 2273], "help_range": [2282, 2338]}, {"param_range": [2340, 2347], "help_range": [2356, 2414]}, {"param_range": [2416, 2424], "help_range": [2432, 2486]}, {"param_range": [2488, 2495], "help_range": [2504, 2552]}, {"param_range": [2555, 2560], "help_range": [2571, 2993]}, {"param_range": [2996, 3004], "help_range": [3014, 3105]}, {"param_range": [3107, 3116], "help_range": [3125, 3233]}, {"param_range": [3235, 3246], "help_range": [3253, 4372]}], "previous": "3dAllineate_part7.json", "next": "3dAllineate_part9.json"}