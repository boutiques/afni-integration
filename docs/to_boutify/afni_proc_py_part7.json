{"helptext": ["                                \\", "                  -blocks despike tshift align tlrc volreg blur mask regress \\", "                  -tcat_remove_first_trs 3                                   \\", "                  -align_opts_aea -cost lpc+ZZ                               \\", "                  -volreg_align_to MIN_OUTLIER                               \\", "                  -volreg_align_e2a                                          \\", "                  -volreg_tlrc_warp                                          \\", "                  -mask_segment_anat yes                                     \\", "                  -mask_segment_erode yes                                    \\", "                  -regress_censor_motion 0.2                                 \\", "                  -regress_censor_outliers 0.1                               \\", "                  -regress_bandpass 0.01 0.1                                 \\", "                  -regress_apply_mot_types demean deriv                      \\", "                  -regress_ROI WMe                                           \\", "                  -regress_est_blur_epits                                    \\", "                  -regress_est_blur_errts", "", "       Example 10b. Resting state analysis, as 10a with 3dRSFC. ~2~", "", "            This is for band passing and computation of ALFF, etc.", "", "          * This will soon use a modified 3dRSFC.", "", "            Like example #10, but add -regress_RSFC to bandpass via 3dRSFC.", "            Skip censoring and regression band passing because of the bandpass", "            operation in 3dRSFC.", "", "            To correspond to common tractography, this example stays in orig", "            space (no 'tlrc' block, no -volreg_tlrc_warp option).  Of course,", "            going to standard space is an option.", "", "                afni_proc.py -subj_id subj123                                \\", "                  -dsets epi_run1+orig.HEAD                                  \\", "                  -copy_anat anat+orig                                       \\", "                  -blocks despike tshift align volreg blur mask regress      \\", "                  -tcat_remove_first_trs 3                                   \\", "                  -volreg_align_e2a                                          \\", "                  -blur_size 6.0                                             \\", "                  -mask_apply epi                                            \\", "                  -mask_segment_anat yes                                     \\", "                  -mask_segment_erode yes                                    \\", "                  -regress_bandpass 0.01 0.1                                 \\", "                  -regress_apply_mot_types demean deriv                      \\", "                  -regress_ROI WMe                                           \\", "                  -regress_RSFC                                              \\", "                  -regress_run_clustsim no                                   \\", "                  -regress_est_blur_errts", "", "       Example 11. Resting state analysis (now even more modern :). ~2~", "", "         o Yes, censor (outliers and motion) and despike.", "         o Align the anatomy and EPI using the lpc+ZZ cost function, rather", "           than the default lpc one.", "         o Register EPI volumes to the one which has the minimum outlier", "              fraction (so hopefully the least motion).", "         o Use non-linear registration to MNI template (non-linear 2009c).", "           * This adds a lot of processing time.", "         o No bandpassing.", "         o Use fast ANATICOR method (slightly different from default ANATICOR).", "         o Use FreeSurfer segmentation for:", "             - regression of first 3 principal components of lateral ventricles", "             - ANATICOR white matter mask (for local white matter regression)", "           * For details on how these masks were created, see \"FREESURFER NOTE\"", "             in the help, as it refers to this \"Example 11\".", "         o Input anat is from FreeSurfer (meaning it is aligned with FS masks).", "             - output from FS is usually not quite aligned with input", "         o Erode FS white matter and ventricle masks before application.", "         o Bring along FreeSurfer parcellation datasets:", "             - aaseg : NN interpolated onto the anatomical grid", "             - aeseg : NN interpolated onto the EPI        grid", "           * These 'aseg' follower datasets are just for visualization,", "             they are not actually required for the analysis.", "         o Compute average correlation volumes of the errts against the", "           the gray matter (aeseg) and ventricle (FSVent) masks.", "", "           Note: it might be reasonable to use either set of blur estimates", "                 here (from epits or errts).  The epits (uncleaned) dataset", "                 has all of the noise (though what should be considered noise", "                 in this context is not clear), while the errts is motion", "                 censored.  For consistency in resting state, it would be", "                 reasonable to stick with epits.  They will likely be almost", "                 identical.", "", "", "                afni_proc.py -subj_id FT.11.rest                             \\", "                  -blocks despike tshift align tlrc volreg blur mask regress \\", "                  -copy_anat FT_SurfVol.nii                                  \\", "                  -anat_follower_ROI aaseg anat aparc.a2009s+aseg.nii        \\", "                  -anat_follower_ROI aeseg epi  aparc.a2009s+aseg.nii        \\", "                  -anat_follower_ROI FSvent epi FT_vent.nii                  \\", "                  -anat_follower_ROI FSWe epi FT_white.nii                   \\", "                  -anat_follower_erode FSvent FSWe                           \\", "                  -dsets FT_epi_r?+orig.HEAD                                 \\", "                  -tcat_remove_first_trs 2                                   \\", "                  -align_opts_aea -cost lpc+ZZ                               \\", "                  -tlrc_base MNI152_T1_2009c+tlrc                            \\", "                  -tlrc_NL_warp                                              \\", "                  -volreg_align_to MIN_OUTLIER                               \\", "                  -volreg_align_e2a                                          \\", "                  -volreg_tlrc_warp                                          \\", "                  -regress_motion_per_run                                    \\", "                  -regress_ROI_PC FSvent 3                                   \\", "                  -regress_make_corr_vols aeseg FSvent                       \\", "                  -regress_anaticor_fast                                     \\", "                  -regress_anaticor_label FSWe                               \\", "                  -regress_censor_motion 0.2                                 \\", "                  -regress_censor_outliers 0.1                               \\", "                  -regress_apply_mot_types demean deriv                      \\", "                  -regress_est_blur_epits                                    \\", "                  -regress_est_blur_errts", "", "       Example 11b. Similar to 11, but without FreeSurfer. ~2~", "", "         AFNI currently does not have a good program to extract ventricles.", "         But it can make a CSF mask that includes them.  So without FreeSurfer,", "         one could import a ventricle mask from the template (e.g. for TT space,", "         using TT_desai_dd_mpm+tlrc).  For example, assume Talairach space for", "         the analysis, create a ventricle "], "params": [{"param_range": [1000, 1012], "help_range": [982, 1844]}, {"param_range": [1863, 1869], "help_range": [1845, 2397]}, {"param_range": [2416, 2434], "help_range": [508, 586]}, {"param_range": [2495, 2514], "help_range": [2477, 2634]}, {"param_range": [2653, 2677], "help_range": [-2786, -2708]}, {"param_range": [2732, 2744], "help_range": [2714, 2871]}, {"param_range": [2890, 2911], "help_range": [2890, 5653]}, {"param_range": [5677, 5697], "help_range": [5659, 5737]}, {"param_range": [5756, 5762], "help_range": [5738, 5895]}, {"param_range": [5914, 5929], "help_range": [5896, 6448]}, {"param_range": [6467, 6479], "help_range": [6449, 6527]}], "previous": "afni_proc.py_part6.json", "next": "afni_proc.py_part8.json"}