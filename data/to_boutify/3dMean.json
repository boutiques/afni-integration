{
 "helptext": [
  "Usage: 3dMean [options] dset dset ...",
  "Takes the voxel-by-voxel mean of all input datasets;",
  "the main reason is to be faster than 3dcalc.",
  "",
  "Options [see 3dcalc -help for more details on these]:",
  "  -verbose    = Print out some information along the way.",
  "  -prefix ppp = Sets the prefix of the output dataset.",
  "  -datum ddd  = Sets the datum of the output dataset.",
  "  -fscale     = Force scaling of the output to the maximum integer range.",
  "  -gscale     = Same as '-fscale', but also forces each output sub-brick to",
  "                  to get the same scaling factor.",
  "  -nscale     = Don't do any scaling on output to byte or short datasets.",
  "                  ** Only use this option if you are sure you",
  "                     want the output dataset to be integer-valued!",
  "  -non_zero   = Use only non-zero values for calculation of mean or squares",
  "",
  "  -sd *OR*    = Calculate the standard deviation, sqrt(variance), instead",
  "  -stdev         of the mean (cannot be used with -sqr, -sum or -non_zero).",
  "",
  "  -sqr        = Average the squares, instead of the values.",
  "  -sum        = Just take the sum (don't divide by number of datasets).",
  "  -count      = compute only the count of non-zero voxels.",
  "",
  "  -mask_inter = Create a simple intersection mask.",
  "  -mask_union = Create a simple union mask.",
  "",
  "                The masks will be set by any non-zero voxels in",
  "                the input datasets.",
  "",
  "  -weightset WSET = Sum of N dsets will be weighted by N volume WSET.",
  "                    e.g. -weightset opt_comb_weights+tlrc",
  "                This weight dataset must be of type float.",
  "",
  "N.B.: All input datasets must have the same number of voxels along",
  "       each axis (x,y,z,t).",
  "    * At least 2 input datasets are required.",
  "    * Dataset sub-brick selectors [] are allowed.",
  "    * The output dataset origin, time steps, etc., are taken from the",
  "       first input dataset.",
  "*** If you are trying to compute the mean (or some other statistic)",
  "    across time for a 3D+time dataset (not across datasets), use",
  "    3dTstat instead.",
  "",
  "++ Compile date = May 25 2018 {AFNI_18.1.18:macosx_10.7_Intel_64}",
  ""
 ],
 "params": [
  {
   "param_range": [
    193,
    201
   ],
   "help_range": [
    207,
    248
   ]
  },
  {
   "param_range": [
    251,
    258
   ],
   "help_range": [
    265,
    303
   ]
  },
  {
   "param_range": [
    306,
    312
   ],
   "help_range": [
    320,
    357
   ]
  },
  {
   "param_range": [
    360,
    367
   ],
   "help_range": [
    374,
    431
   ]
  },
  {
   "param_range": [
    434,
    441
   ],
   "help_range": [
    448,
    557
   ]
  },
  {
   "param_range": [
    560,
    567
   ],
   "help_range": [
    574,
    760
   ]
  },
  {
   "param_range": [
    763,
    772
   ],
   "help_range": [
    777,
    836
   ]
  },
  {
   "param_range": [
    840,
    843
   ],
   "help_range": [
    843,
    911
   ]
  },
  {
   "param_range": [
    914,
    920
   ],
   "help_range": [
    920,
    987
   ]
  },
  {
   "param_range": [
    991,
    995
   ],
   "help_range": [
    1005,
    1048
   ]
  },
  {
   "param_range": [
    1051,
    1055
   ],
   "help_range": [
    1065,
    1120
   ]
  },
  {
   "param_range": [
    1123,
    1129
   ],
   "help_range": [
    1137,
    1179
   ]
  },
  {
   "param_range": [
    1183,
    1194
   ],
   "help_range": [
    1197,
    1231
   ]
  },
  {
   "param_range": [
    1234,
    1245
   ],
   "help_range": [
    1248,
    1376
   ]
  },
  {
   "param_range": [
    1380,
    1390
   ],
   "help_range": [
    1398,
    2075
   ]
  }
 ]
}