{
 "helptext": [
  "++ 3dConvolve: AFNI version=AFNI_18.1.18 (May 25 2018) [64-bit]",
  "++ Authored by: B. Douglas Ward",
  "Program to calculate the voxelwise convolution of given impulse response   ",
  "function (IRF) time series contained in a 3d+time dataset with a specified ",
  "input stimulus function time series.  This program will also calculate     ",
  "convolutions involving multiple IRF's and multiple stimulus functions.     ",
  "Input options include addition of system noise to the estimated output.    ",
  "Output consists of an AFNI 3d+time dataset which contains the estimated    ",
  "system response.  Alternatively, if all inputs are .1D time series files,  ",
  "then the output will be a single .1D time series file.                     ",
  "                                                                       ",
  "Usage:                                                                 ",
  "3dConvolve                                                             ",
  "-input fname         fname = filename of 3d+time template dataset      ",
  "[-input1D]           flag to indicate all inputs are .1D time series   ",
  "[-mask mname]        mname = filename of 3d mask dataset               ",
  "[-censor cname]      cname = filename of censor .1D time series        ",
  "[-concat rname]      rname = filename for list of concatenated runs    ",
  "[-nfirst fnum]       fnum = number of first time point to calculate by ",
  "                       convolution procedure.  (default = max maxlag)  ",
  "[-nlast  lnum]       lnum = number of last time point to calculate by  ",
  "                       convolution procedure.  (default = last point)  ",
  "[-polort pnum]       pnum = degree of polynomial corresponding to the  ",
  "                       baseline model  (default: pnum = 1)             ",
  "[-base_file bname]   bname = file containing baseline parameters       ",
  "                                                                       ",
  "-num_stimts num      num = number of input stimulus time series        ",
  "                       (default: num = 0)                              ",
  "-stim_file k sname   sname = filename of kth time series input stimulus",
  "[-stim_minlag k m]   m = minimum time lag for kth input stimulus       ",
  "                       (default: m = 0)                                ",
  "[-stim_maxlag k n]   n = maximum time lag for kth input stimulus       ",
  "                       (default: n = 0)                                ",
  "[-stim_nptr k p]     p = number of stimulus function points per TR     ",
  "                       Note: This option requires 0 slice offset times ",
  "                       (default: p = 1)                                ",
  "                                                                       ",
  "[-iresp k iprefix]   iprefix = prefix of 3d+time input dataset which   ",
  "                       contains the kth impulse response function      ",
  "                                                                       ",
  "[-errts eprefix]     eprefix = prefix of 3d+time input dataset which   ",
  "                       contains the residual error time series         ",
  "                       (i.e., noise which will be added to the output) ",
  "                                                                       ",
  "[-sigma s]           s = std. dev. of additive Gaussian noise          ",
  "                       (default: s = 0)                                ",
  "[-seed d]            d = seed for random number generator              ",
  "                       (default: d = 1234567)                          ",
  "                                                                       ",
  "[-xout]              flag to write X matrix to screen                  ",
  "[-output tprefix]    tprefix = prefix of 3d+time output dataset which  ",
  "                       will contain the convolved time series data     ",
  "                       (or tprefix = prefix of .1D output time series  ",
  "                       if the -input1D option is used)                 ",
  "                                                                       ",
  "",
  "++ Compile date = May 25 2018 {AFNI_18.1.18:macosx_10.7_Intel_64}",
  ""
 ],
 "params": [
  {
   "param_range": [
    920,
    926
   ],
   "help_range": [
    949,
    985
   ]
  },
  {
   "param_range": [
    993,
    1001
   ],
   "help_range": [
    1013,
    1060
   ]
  },
  {
   "param_range": [
    1065,
    1070
   ],
   "help_range": [
    1085,
    1120
   ]
  },
  {
   "param_range": [
    1137,
    1144
   ],
   "help_range": [
    1157,
    1199
   ]
  },
  {
   "param_range": [
    1209,
    1216
   ],
   "help_range": [
    1229,
    1275
   ]
  },
  {
   "param_range": [
    1281,
    1288
   ],
   "help_range": [
    1301,
    1421
   ]
  },
  {
   "param_range": [
    1425,
    1431
   ],
   "help_range": [
    1445,
    1565
   ]
  },
  {
   "param_range": [
    1569,
    1576
   ],
   "help_range": [
    1589,
    1698
   ]
  },
  {
   "param_range": [
    1713,
    1723
   ],
   "help_range": [
    1733,
    1776
   ]
  },
  {
   "param_range": [
    1856,
    1867
   ],
   "help_range": [
    1883,
    1969
   ]
  },
  {
   "param_range": [
    2000,
    2010
   ],
   "help_range": [
    2029,
    2071
   ]
  },
  {
   "param_range": [
    2073,
    2085
   ],
   "help_range": [
    2093,
    2183
   ]
  },
  {
   "param_range": [
    2217,
    2229
   ],
   "help_range": [
    2237,
    2327
   ]
  },
  {
   "param_range": [
    2361,
    2371
   ],
   "help_range": [
    2381,
    2543
   ]
  },
  {
   "param_range": [
    2649,
    2655
   ],
   "help_range": [
    2669,
    2785
   ]
  },
  {
   "param_range": [
    2865,
    2871
   ],
   "help_range": [
    2885,
    3078
   ]
  },
  {
   "param_range": [
    3153,
    3159
   ],
   "help_range": [
    3173,
    3263
   ]
  },
  {
   "param_range": [
    3297,
    3302
   ],
   "help_range": [
    3317,
    3413
   ]
  },
  {
   "param_range": [
    3513,
    3518
   ],
   "help_range": [
    3533,
    3565
   ]
  },
  {
   "param_range": [
    3585,
    3592
   ],
   "help_range": [
    3605,
    4010
   ]
  }
 ]
}